{
  "version": 3,
  "sources": ["../../../../dashboard/dist/api-key-management-sales-channels-WVAOPOJT.mjs"],
  "sourcesContent": ["import {\n  useSalesChannelTableColumns\n} from \"./chunk-6GZ2CHKW.mjs\";\nimport \"./chunk-GA34GXNI.mjs\";\nimport \"./chunk-OI7BBNYW.mjs\";\nimport {\n  useSalesChannelTableQuery\n} from \"./chunk-GSM3OOMB.mjs\";\nimport \"./chunk-OC7BQLYI.mjs\";\nimport \"./chunk-ADOCJB6L.mjs\";\nimport \"./chunk-LQTHYS2Z.mjs\";\nimport \"./chunk-P3UUX2T6.mjs\";\nimport {\n  DataTable,\n  useDataTable\n} from \"./chunk-VASL4POI.mjs\";\nimport \"./chunk-YEDAFXMB.mjs\";\nimport \"./chunk-RKBIB2RM.mjs\";\nimport \"./chunk-WX2SMNCD.mjs\";\nimport \"./chunk-C76H5USB.mjs\";\nimport \"./chunk-IWTE57WW.mjs\";\nimport \"./chunk-M3VFKDXJ.mjs\";\nimport \"./chunk-QAF7PVQE.mjs\";\nimport \"./chunk-ODJSGZRJ.mjs\";\nimport \"./chunk-GQ6DSXIJ.mjs\";\nimport \"./chunk-XDUX5ONP.mjs\";\nimport \"./chunk-ZHSZGFLW.mjs\";\nimport {\n  RouteFocusModal,\n  useRouteModal\n} from \"./chunk-RLLZZQKN.mjs\";\nimport \"./chunk-C7RYT3S3.mjs\";\nimport {\n  useApiKey,\n  useBatchAddSalesChannelsToApiKey\n} from \"./chunk-JJJMSDYK.mjs\";\nimport {\n  useSalesChannels\n} from \"./chunk-TID2KHW6.mjs\";\nimport \"./chunk-K3ZYJA7Z.mjs\";\nimport \"./chunk-RZLMJCFD.mjs\";\nimport \"./chunk-2T3PD3VS.mjs\";\nimport \"./chunk-OEVIH5XG.mjs\";\nimport \"./chunk-GPBQTNZI.mjs\";\nimport \"./chunk-PWWSB76U.mjs\";\nimport \"./chunk-GH77ZQI2.mjs\";\n\n// src/routes/api-key-management/api-key-management-sales-channels/api-key-management-sales-channels.tsx\nimport { useParams } from \"react-router-dom\";\n\n// src/routes/api-key-management/api-key-management-sales-channels/components/api-key-sales-channels-form/api-key-sales-channels-form.tsx\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button, Checkbox, Hint, Tooltip, toast } from \"@medusajs/ui\";\nimport { keepPreviousData } from \"@tanstack/react-query\";\nimport {\n  createColumnHelper\n} from \"@tanstack/react-table\";\nimport { useMemo, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport * as zod from \"zod\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AddSalesChannelsToApiKeySchema = zod.object({\n  sales_channel_ids: zod.array(zod.string())\n});\nvar PAGE_SIZE = 50;\nvar ApiKeySalesChannelsForm = ({\n  apiKey,\n  preSelected = []\n}) => {\n  const { t } = useTranslation();\n  const { handleSuccess } = useRouteModal();\n  const form = useForm({\n    defaultValues: {\n      sales_channel_ids: []\n    },\n    resolver: zodResolver(AddSalesChannelsToApiKeySchema)\n  });\n  const { setValue } = form;\n  const [rowSelection, setRowSelection] = useState({});\n  const { mutateAsync, isPending } = useBatchAddSalesChannelsToApiKey(apiKey);\n  const { raw, searchParams } = useSalesChannelTableQuery({\n    pageSize: PAGE_SIZE\n  });\n  const columns = useColumns();\n  const { sales_channels, count, isLoading } = useSalesChannels(\n    { ...searchParams },\n    {\n      placeholderData: keepPreviousData\n    }\n  );\n  const updater = (fn) => {\n    const state = typeof fn === \"function\" ? fn(rowSelection) : fn;\n    const ids = Object.keys(state);\n    setValue(\"sales_channel_ids\", ids, {\n      shouldDirty: true,\n      shouldTouch: true\n    });\n    setRowSelection(state);\n  };\n  const { table } = useDataTable({\n    data: sales_channels ?? [],\n    columns,\n    count,\n    enablePagination: true,\n    enableRowSelection: (row) => {\n      return !preSelected.includes(row.original.id);\n    },\n    getRowId: (row) => row.id,\n    pageSize: PAGE_SIZE,\n    rowSelection: {\n      state: rowSelection,\n      updater\n    }\n  });\n  const handleSubmit = form.handleSubmit(async (values) => {\n    await mutateAsync(values.sales_channel_ids, {\n      onSuccess: () => {\n        toast.success(\n          t(\"apiKeyManagement.salesChannels.successToast\", {\n            count: values.sales_channel_ids.length\n          })\n        );\n        handleSuccess();\n      },\n      onError: (err) => {\n        toast.error(err.message);\n      }\n    });\n  });\n  return /* @__PURE__ */ jsx(RouteFocusModal.Form, { form, children: /* @__PURE__ */ jsxs(\n    \"form\",\n    {\n      onSubmit: handleSubmit,\n      className: \"flex h-full flex-col overflow-hidden\",\n      children: [\n        /* @__PURE__ */ jsx(RouteFocusModal.Header, { children: /* @__PURE__ */ jsxs(\"div\", { className: \"flex items-center justify-end gap-x-2\", children: [\n          form.formState.errors.sales_channel_ids && /* @__PURE__ */ jsx(Hint, { variant: \"error\", children: form.formState.errors.sales_channel_ids.message }),\n          /* @__PURE__ */ jsx(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ jsx(Button, { size: \"small\", variant: \"secondary\", children: t(\"actions.cancel\") }) }),\n          /* @__PURE__ */ jsx(Button, { size: \"small\", type: \"submit\", isLoading: isPending, children: t(\"actions.save\") })\n        ] }) }),\n        /* @__PURE__ */ jsx(RouteFocusModal.Body, { children: /* @__PURE__ */ jsx(\n          DataTable,\n          {\n            table,\n            columns,\n            count,\n            pageSize: PAGE_SIZE,\n            pagination: true,\n            search: \"autofocus\",\n            isLoading,\n            queryObject: raw,\n            orderBy: [\"name\", \"created_at\", \"updated_at\"],\n            layout: \"fill\",\n            noRecords: {\n              message: t(\n                \"apiKeyManagement.addSalesChannels.list.noRecordsMessage\"\n              )\n            }\n          }\n        ) })\n      ]\n    }\n  ) });\n};\nvar columnHelper = createColumnHelper();\nvar useColumns = () => {\n  const { t } = useTranslation();\n  const base = useSalesChannelTableColumns();\n  return useMemo(\n    () => [\n      columnHelper.display({\n        id: \"select\",\n        header: ({ table }) => {\n          return /* @__PURE__ */ jsx(\n            Checkbox,\n            {\n              checked: table.getIsSomePageRowsSelected() ? \"indeterminate\" : table.getIsAllPageRowsSelected(),\n              onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)\n            }\n          );\n        },\n        cell: ({ row }) => {\n          const isPreSelected = !row.getCanSelect();\n          const isSelected = row.getIsSelected() || isPreSelected;\n          const Component = /* @__PURE__ */ jsx(\n            Checkbox,\n            {\n              checked: isSelected,\n              disabled: isPreSelected,\n              onCheckedChange: (value) => row.toggleSelected(!!value),\n              onClick: (e) => {\n                e.stopPropagation();\n              }\n            }\n          );\n          if (isPreSelected) {\n            return /* @__PURE__ */ jsx(\n              Tooltip,\n              {\n                content: t(\n                  \"apiKeyManagement.salesChannels.alreadyAddedTooltip\"\n                ),\n                side: \"right\",\n                children: Component\n              }\n            );\n          }\n          return Component;\n        }\n      }),\n      ...base\n    ],\n    [t, base]\n  );\n};\n\n// src/routes/api-key-management/api-key-management-sales-channels/api-key-management-sales-channels.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar ApiKeyManagementAddSalesChannels = () => {\n  const { id } = useParams();\n  const { api_key, isLoading, isError, error } = useApiKey(id);\n  const preSelected = api_key?.sales_channels?.map((sc) => sc.id);\n  const ready = !isLoading && api_key;\n  if (isError) {\n    throw error;\n  }\n  return /* @__PURE__ */ jsx2(RouteFocusModal, { children: ready && /* @__PURE__ */ jsx2(ApiKeySalesChannelsForm, { apiKey: id, preSelected }) });\n};\nexport {\n  ApiKeyManagementAddSalesChannels as Component\n};\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "t", "jsx2"]
}
