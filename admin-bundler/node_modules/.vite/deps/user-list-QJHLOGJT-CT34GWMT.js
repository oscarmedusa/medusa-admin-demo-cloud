import "./chunk-EGRHWZRV.js";
import {
  DataTable,
  useDataTable
} from "./chunk-JH6E7Y6M.js";
import "./chunk-EIGZCZHJ.js";
import "./chunk-CEIAMOT7.js";
import "./chunk-EYAVSJ2J.js";
import {
  createColumnHelper
} from "./chunk-TI6Y7EUW.js";
import {
  useQueryParams
} from "./chunk-JEFCFQ36.js";
import "./chunk-Z74QHE3B.js";
import "./chunk-6VC5CKXS.js";
import "./chunk-4HJQONUH.js";
import "./chunk-IANM7SMM.js";
import {
  useUsers
} from "./chunk-EFAG6P6Z.js";
import "./chunk-YSLQHU2M.js";
import {
  ActionMenu
} from "./chunk-IE22HJTV.js";
import "./chunk-RLHQ5IGU.js";
import "./chunk-HZGR4LPF.js";
import "./chunk-3FGSU2DA.js";
import "./chunk-YUBPGLTM.js";
import "./chunk-K4BQKT4B.js";
import "./chunk-SWXOOP7W.js";
import "./chunk-ROURSU5C.js";
import "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import "./chunk-QDFILGGU.js";
import {
  keepPreviousData
} from "./chunk-ZSXFNTF6.js";
import {
  Button,
  Container,
  Heading,
  PencilSquare,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  Link,
  Outlet
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM,
  require_react
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/user-list-QJHLOGJT.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
import after from "virtual:medusa/widgets/user/list/after";
import before from "virtual:medusa/widgets/user/list/before";
var UserRowActions = ({ user }) => {
  const { t } = useTranslation();
  return (0, import_jsx_runtime.jsx)(
    ActionMenu,
    {
      groups: [
        {
          actions: [
            {
              icon: (0, import_jsx_runtime.jsx)(PencilSquare, {}),
              label: t("actions.edit"),
              to: `${user.id}/edit`
            }
          ]
        }
      ]
    }
  );
};
var columnHelper = createColumnHelper();
var useUserTableColumns = () => {
  const { t } = useTranslation();
  return (0, import_react.useMemo)(
    () => [
      columnHelper.accessor("email", {
        header: t("fields.email"),
        cell: ({ row }) => {
          return row.original.email;
        }
      }),
      columnHelper.display({
        id: "name",
        header: t("fields.name"),
        cell: ({ row }) => {
          const name = [row.original.first_name, row.original.last_name].filter(Boolean).join(" ");
          if (!name) {
            return (0, import_jsx_runtime2.jsx)("span", { className: "text-ui-fg-muted", children: "-" });
          }
          return name;
        }
      }),
      columnHelper.display({
        id: "actions",
        cell: ({ row }) => (0, import_jsx_runtime2.jsx)(UserRowActions, { user: row.original })
      })
    ],
    [t]
  );
};
var useUserTableQuery = ({
  pageSize = 20,
  prefix
}) => {
  const raw = useQueryParams(["q", "order", "offset"], prefix);
  const { offset, ...params } = raw;
  const searchParams = {
    limit: pageSize,
    offset: offset ? parseInt(offset) : 0,
    ...params
  };
  return {
    searchParams,
    raw
  };
};
var PAGE_SIZE = 20;
var UserListTable = () => {
  const { raw, searchParams } = useUserTableQuery({
    pageSize: PAGE_SIZE
  });
  const {
    users,
    count,
    isPending: isLoading,
    isError,
    error
  } = useUsers(searchParams, {
    placeholderData: keepPreviousData
  });
  const columns = useUserTableColumns();
  const { table } = useDataTable({
    data: users ?? [],
    columns,
    count,
    enablePagination: true,
    getRowId: (row) => row.id,
    pageSize: PAGE_SIZE
  });
  const { t } = useTranslation();
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime3.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime3.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime3.jsx)(Heading, { children: t("users.domain") }),
      (0, import_jsx_runtime3.jsx)(Button, { size: "small", variant: "secondary", asChild: true, children: (0, import_jsx_runtime3.jsx)(Link, { to: "invite", children: t("users.invite") }) })
    ] }),
    (0, import_jsx_runtime3.jsx)(
      DataTable,
      {
        table,
        columns,
        count,
        pageSize: PAGE_SIZE,
        isLoading,
        orderBy: ["email", "first_name", "last_name"],
        navigateTo: (row) => `${row.id}`,
        search: true,
        pagination: true,
        queryObject: raw
      }
    )
  ] });
};
var UserList = () => {
  return (0, import_jsx_runtime4.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
    before.widgets.map((w, i) => (0, import_jsx_runtime4.jsx)("div", { children: (0, import_jsx_runtime4.jsx)(w.Component, {}) }, i)),
    (0, import_jsx_runtime4.jsx)(UserListTable, {}),
    after.widgets.map((w, i) => (0, import_jsx_runtime4.jsx)("div", { children: (0, import_jsx_runtime4.jsx)(w.Component, {}) }, i)),
    (0, import_jsx_runtime4.jsx)(Outlet, {})
  ] });
};
export {
  UserList as Component
};
//# sourceMappingURL=user-list-QJHLOGJT-CT34GWMT.js.map
