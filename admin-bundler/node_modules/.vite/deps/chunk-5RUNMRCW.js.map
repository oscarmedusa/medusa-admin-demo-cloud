{
  "version": 3,
  "sources": ["../../../../dashboard/dist/chunk-ZDMW42ZH.mjs"],
  "sourcesContent": ["import {\n  customersQueryKeys\n} from \"./chunk-PBIY5KWT.mjs\";\nimport {\n  queryClient\n} from \"./chunk-2T3PD3VS.mjs\";\nimport {\n  queryKeysFactory\n} from \"./chunk-OEVIH5XG.mjs\";\nimport {\n  sdk\n} from \"./chunk-PWWSB76U.mjs\";\n\n// src/hooks/api/customer-groups.tsx\nimport {\n  useMutation,\n  useQuery\n} from \"@tanstack/react-query\";\nvar CUSTOMER_GROUPS_QUERY_KEY = \"customer_groups\";\nvar customerGroupsQueryKeys = queryKeysFactory(\n  CUSTOMER_GROUPS_QUERY_KEY\n);\nvar useCustomerGroup = (id, options) => {\n  const { data, ...rest } = useQuery({\n    queryKey: customerGroupsQueryKeys.detail(id),\n    queryFn: async () => sdk.admin.customerGroup.retrieve(id),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useCustomerGroups = (query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: () => sdk.admin.customerGroup.list(query),\n    queryKey: customerGroupsQueryKeys.list(query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useCreateCustomerGroup = (options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.customerGroup.create(payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.lists()\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useUpdateCustomerGroup = (id, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.customerGroup.update(id, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.detail(id)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useDeleteCustomerGroup = (id, options) => {\n  return useMutation({\n    mutationFn: () => sdk.admin.customerGroup.delete(id),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.detail(id)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useAddCustomersToGroup = (id, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.customerGroup.batchCustomers(id, { add: payload }),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.detail(id)\n      });\n      queryClient.invalidateQueries({\n        queryKey: customersQueryKeys.lists()\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useRemoveCustomersFromGroup = (id, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.customerGroup.batchCustomers(id, { remove: payload }),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: customerGroupsQueryKeys.detail(id)\n      });\n      queryClient.invalidateQueries({\n        queryKey: customersQueryKeys.lists()\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\n\nexport {\n  customerGroupsQueryKeys,\n  useCustomerGroup,\n  useCustomerGroups,\n  useCreateCustomerGroup,\n  useUpdateCustomerGroup,\n  useDeleteCustomerGroup,\n  useAddCustomersToGroup,\n  useRemoveCustomersFromGroup\n};\n"],
  "mappings": "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",
  "names": []
}
