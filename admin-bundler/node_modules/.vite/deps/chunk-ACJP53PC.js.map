{
  "version": 3,
  "sources": ["../../../../dashboard/dist/chunk-UXITYQ2U.mjs"],
  "sourcesContent": ["import {\n  queryClient\n} from \"./chunk-2T3PD3VS.mjs\";\nimport {\n  queryKeysFactory\n} from \"./chunk-OEVIH5XG.mjs\";\nimport {\n  sdk\n} from \"./chunk-PWWSB76U.mjs\";\n\n// src/hooks/api/orders.tsx\nimport {\n  useMutation,\n  useQuery\n} from \"@tanstack/react-query\";\nvar ORDERS_QUERY_KEY = \"orders\";\nvar _orderKeys = queryKeysFactory(ORDERS_QUERY_KEY);\n_orderKeys.preview = function(id) {\n  return [this.detail(id), \"preview\"];\n};\n_orderKeys.changes = function(id) {\n  return [this.detail(id), \"changes\"];\n};\nvar ordersQueryKeys = _orderKeys;\nvar useOrder = (id, query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: async () => sdk.admin.order.retrieve(id, query),\n    queryKey: ordersQueryKeys.detail(id, query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useOrderPreview = (id, query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: async () => sdk.admin.order.retrievePreview(id, query),\n    queryKey: ordersQueryKeys.preview(id),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useOrders = (query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: async () => sdk.admin.order.list(query),\n    queryKey: ordersQueryKeys.list(query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useOrderChanges = (id, query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: async () => sdk.admin.order.listChanges(id, query),\n    queryKey: ordersQueryKeys.changes(id),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useCreateOrderFulfillment = (orderId, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.order.createFulfillment(orderId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.all\n      });\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.preview(orderId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useCancelOrderFulfillment = (orderId, fulfillmentId, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.order.cancelFulfillment(orderId, fulfillmentId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.all\n      });\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.preview(orderId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useCreateOrderShipment = (orderId, fulfillmentId, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.order.createShipment(orderId, fulfillmentId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.all\n      });\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.preview(orderId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useMarkOrderFulfillmentAsDelivered = (orderId, fulfillmentId, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.order.markAsDelivered(orderId, fulfillmentId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.all\n      });\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.preview(orderId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useCancelOrder = (orderId, options) => {\n  return useMutation({\n    mutationFn: (id) => sdk.admin.order.cancel(id),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.details()\n      });\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.preview(orderId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\n\nexport {\n  ordersQueryKeys,\n  useOrder,\n  useOrderPreview,\n  useOrders,\n  useOrderChanges,\n  useCreateOrderFulfillment,\n  useCancelOrderFulfillment,\n  useCreateOrderShipment,\n  useMarkOrderFulfillmentAsDelivered,\n  useCancelOrder\n};\n"],
  "mappings": "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",
  "names": []
}
