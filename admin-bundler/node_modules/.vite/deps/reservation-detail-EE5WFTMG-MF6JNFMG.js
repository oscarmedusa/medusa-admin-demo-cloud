import {
  InventoryItemGeneralSection
} from "./chunk-SJD7P4MF.js";
import "./chunk-EGRHWZRV.js";
import {
  SectionRow
} from "./chunk-IWFSKLKK.js";
import {
  JsonViewSection
} from "./chunk-GV2TOR46.js";
import {
  reservationItemsQueryKeys,
  useReservationItem
} from "./chunk-Z34GYBFG.js";
import {
  useStockLocation
} from "./chunk-VN2HND4I.js";
import {
  ActionMenu
} from "./chunk-IE22HJTV.js";
import {
  useInventoryItem
} from "./chunk-IH74SCJ5.js";
import {
  queryClient
} from "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import {
  sdk
} from "./chunk-ZSXFNTF6.js";
import {
  Container,
  Heading,
  PencilSquare,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  Outlet,
  useLoaderData,
  useParams
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/reservation-detail-EE5WFTMG.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
import after from "virtual:medusa/widgets/reservation/details/after";
import before from "virtual:medusa/widgets/reservation/details/before";
import sideAfter from "virtual:medusa/widgets/reservation/details/side/after";
import sideBefore from "virtual:medusa/widgets/reservation/details/side/before";
var reservationDetailQuery = (id) => ({
  queryKey: reservationItemsQueryKeys.detail(id),
  queryFn: async () => sdk.admin.reservation.retrieve(id)
});
var reservationItemLoader = async ({ params }) => {
  const id = params.id;
  const query = reservationDetailQuery(id);
  return queryClient.getQueryData(
    query.queryKey
  ) ?? await queryClient.fetchQuery(query);
};
var ReservationGeneralSection = ({
  reservation
}) => {
  const { t } = useTranslation();
  const { inventory_item: inventoryItem, isPending: isLoadingInventoryItem } = useInventoryItem(reservation.inventory_item_id);
  const { stock_location: location, isPending: isLoadingLocation } = useStockLocation(reservation.location_id);
  if (isLoadingInventoryItem || !inventoryItem || isLoadingLocation || !location) {
    return (0, import_jsx_runtime.jsx)("div", { children: "Loading..." });
  }
  const locationLevel = inventoryItem.location_levels.find(
    (l) => l.location_id === reservation.location_id
  );
  return (0, import_jsx_runtime.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime.jsx)(Heading, { children: t("inventory.reservation.header", {
        itemName: inventoryItem.title ?? inventoryItem.sku
      }) }),
      (0, import_jsx_runtime.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  icon: (0, import_jsx_runtime.jsx)(PencilSquare, {}),
                  label: t("actions.edit"),
                  to: `edit`
                }
              ]
            }
          ]
        }
      )
    ] }),
    (0, import_jsx_runtime.jsx)(
      SectionRow,
      {
        title: t("inventory.reservation.lineItemId"),
        value: reservation.line_item_id
      }
    ),
    (0, import_jsx_runtime.jsx)(
      SectionRow,
      {
        title: t("inventory.reservation.description"),
        value: reservation.description
      }
    ),
    (0, import_jsx_runtime.jsx)(
      SectionRow,
      {
        title: t("inventory.reservation.location"),
        value: location == null ? void 0 : location.name
      }
    ),
    (0, import_jsx_runtime.jsx)(
      SectionRow,
      {
        title: t("inventory.reservation.inStockAtLocation"),
        value: locationLevel == null ? void 0 : locationLevel.stocked_quantity
      }
    ),
    (0, import_jsx_runtime.jsx)(
      SectionRow,
      {
        title: t("inventory.reservation.availableAtLocation"),
        value: locationLevel == null ? void 0 : locationLevel.available_quantity
      }
    ),
    (0, import_jsx_runtime.jsx)(
      SectionRow,
      {
        title: t("inventory.reservation.reservedAtLocation"),
        value: locationLevel == null ? void 0 : locationLevel.reserved_quantity
      }
    )
  ] });
};
var ReservationDetail = () => {
  const { id } = useParams();
  const initialData = useLoaderData();
  const { reservation, isLoading, isError, error } = useReservationItem(
    id,
    {},
    {
      initialData
    }
  );
  if (isLoading || !reservation) {
    return (0, import_jsx_runtime2.jsx)("div", { children: "Loading..." });
  }
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime2.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
    before.widgets.map((w, i) => {
      return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, { data: reservation }) }, i);
    }),
    (0, import_jsx_runtime2.jsxs)("div", { className: "flex flex-col gap-x-4 xl:flex-row xl:items-start", children: [
      (0, import_jsx_runtime2.jsxs)("div", { className: "flex w-full flex-col gap-y-3", children: [
        (0, import_jsx_runtime2.jsx)(ReservationGeneralSection, { reservation }),
        after.widgets.map((w, i) => {
          return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, { data: reservation }) }, i);
        }),
        (0, import_jsx_runtime2.jsx)("div", { className: "hidden xl:block", children: (0, import_jsx_runtime2.jsx)(JsonViewSection, { data: reservation }) })
      ] }),
      (0, import_jsx_runtime2.jsxs)("div", { className: "mt-2 flex w-full max-w-[100%] flex-col gap-y-2 xl:mt-0 xl:max-w-[400px]", children: [
        sideBefore.widgets.map((w, i) => {
          return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, { data: reservation }) }, i);
        }),
        (0, import_jsx_runtime2.jsx)(
          InventoryItemGeneralSection,
          {
            inventoryItem: reservation.inventory_item
          }
        ),
        sideAfter.widgets.map((w, i) => {
          return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, { data: reservation }) }, i);
        }),
        (0, import_jsx_runtime2.jsx)("div", { className: "xl:hidden", children: (0, import_jsx_runtime2.jsx)(JsonViewSection, { data: reservation }) }),
        (0, import_jsx_runtime2.jsx)(Outlet, {})
      ] })
    ] })
  ] });
};
export {
  ReservationDetail as Component,
  reservationItemLoader as loader
};
//# sourceMappingURL=reservation-detail-EE5WFTMG-MF6JNFMG.js.map
