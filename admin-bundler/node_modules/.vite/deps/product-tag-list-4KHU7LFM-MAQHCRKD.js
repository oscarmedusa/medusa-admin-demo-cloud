import {
  useDeleteProductTagAction
} from "./chunk-GEBN5VEU.js";
import {
  useProductTagTableColumns
} from "./chunk-MKNNDYSZ.js";
import "./chunk-HBUXMEUG.js";
import "./chunk-AVD447BF.js";
import "./chunk-NCOYYW2M.js";
import "./chunk-3BD6BQAV.js";
import "./chunk-QRFWPENH.js";
import "./chunk-NH42MB5Y.js";
import "./chunk-U5SJZRFA.js";
import "./chunk-6J4Y4O3M.js";
import "./chunk-SPB7ONG5.js";
import "./chunk-TUDLZV3K.js";
import "./chunk-WXCPW5KC.js";
import "./chunk-6EUK4TFP.js";
import "./chunk-CIFTBZLQ.js";
import "./chunk-MWKZ5MLM.js";
import "./chunk-BOUEFVQ5.js";
import "./chunk-B76TY3YZ.js";
import "./chunk-XKOLLBFA.js";
import "./chunk-TLUJIKG2.js";
import "./chunk-CKRB62SG.js";
import "./chunk-KTHKGBUF.js";
import "./chunk-55MYIBGD.js";
import "./chunk-4TA2GWZH.js";
import {
  useProductTagTableQuery
} from "./chunk-EMAM276C.js";
import "./chunk-WZ2B2P5H.js";
import "./chunk-XQJMBMXF.js";
import "./chunk-XOBABI7V.js";
import "./chunk-C4FJXDIH.js";
import {
  useProductTagTableFilters
} from "./chunk-OMKZ5MFX.js";
import "./chunk-5PWCBVWI.js";
import "./chunk-F77UXPVK.js";
import "./chunk-YL5PYK4Z.js";
import "./chunk-T3MTUGMP.js";
import "./chunk-BBMUTALB.js";
import "./chunk-YECDLOJJ.js";
import "./chunk-2V24OE65.js";
import "./chunk-UUWWOB5Y.js";
import "./chunk-WZ4JEFYY.js";
import "./chunk-JAJBH2XW.js";
import "./chunk-2BZXSI4I.js";
import "./chunk-X4DMS4TJ.js";
import "./chunk-HV4CT7SS.js";
import "./chunk-3LONSD4H.js";
import "./chunk-QOLDQVU6.js";
import "./chunk-OCUAOOGJ.js";
import {
  SingleColumnPage
} from "./chunk-JYSVBSJS.js";
import "./chunk-GV2TOR46.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-QZUCBNNJ.js";
import {
  DataTable,
  useDataTable
} from "./chunk-JH6E7Y6M.js";
import "./chunk-EIGZCZHJ.js";
import "./chunk-CEIAMOT7.js";
import "./chunk-EYAVSJ2J.js";
import {
  createColumnHelper
} from "./chunk-TI6Y7EUW.js";
import "./chunk-JEFCFQ36.js";
import "./chunk-Z74QHE3B.js";
import "./chunk-6VC5CKXS.js";
import "./chunk-4HJQONUH.js";
import "./chunk-IANM7SMM.js";
import "./chunk-O47TKOMU.js";
import "./chunk-E26TGYVV.js";
import {
  productTagsQueryKeys,
  useProductTags
} from "./chunk-BCDFWL4W.js";
import "./chunk-VOJT3GRC.js";
import "./chunk-4I3TSILH.js";
import "./chunk-P5R3EHIV.js";
import "./chunk-2TBOMIQA.js";
import "./chunk-7VADNSL7.js";
import "./chunk-AJ3DXG4K.js";
import "./chunk-FYV5O3WI.js";
import "./chunk-ENW5Z6NU.js";
import "./chunk-MKU523AN.js";
import "./chunk-EFAG6P6Z.js";
import "./chunk-NJ7HRVAN.js";
import "./chunk-KNWZIBC3.js";
import "./chunk-5RUNMRCW.js";
import "./chunk-CFFZHLR2.js";
import "./chunk-YEEFU7KP.js";
import "./chunk-6MTGJSDM.js";
import "./chunk-Z34GYBFG.js";
import "./chunk-VN2HND4I.js";
import "./chunk-ACJP53PC.js";
import "./chunk-3AX2W3RD.js";
import "./chunk-ICPBA7GK.js";
import "./chunk-FREJU5EQ.js";
import "./chunk-4UBJQZN6.js";
import "./chunk-QSXBBOKN.js";
import "./chunk-PCCLBZD7.js";
import "./chunk-YSLQHU2M.js";
import {
  ActionMenu
} from "./chunk-IE22HJTV.js";
import "./chunk-RLHQ5IGU.js";
import "./chunk-HZGR4LPF.js";
import "./chunk-3FGSU2DA.js";
import "./chunk-YUBPGLTM.js";
import "./chunk-K4BQKT4B.js";
import "./chunk-SWXOOP7W.js";
import "./chunk-ROURSU5C.js";
import "./chunk-ABZDCU5X.js";
import "./chunk-3VJMO5NN.js";
import "./chunk-IH74SCJ5.js";
import {
  queryClient
} from "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import "./chunk-2ZDF4QRQ.js";
import "./chunk-QDFILGGU.js";
import {
  keepPreviousData,
  sdk
} from "./chunk-ZSXFNTF6.js";
import {
  Button,
  Container,
  Heading,
  PencilSquare,
  Trash,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  Link,
  useLoaderData
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM,
  require_react
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/product-tag-list-4KHU7LFM.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
import after from "virtual:medusa/widgets/product_tag/list/after";
import before from "virtual:medusa/widgets/product_tag/list/before";
var productTagListQuery = (query) => ({
  queryKey: productTagsQueryKeys.list(query),
  queryFn: async () => sdk.admin.productTag.list(query)
});
var productTagListLoader = async ({ request }) => {
  const searchParams = new URL(request.url).searchParams;
  const queryObject = {};
  searchParams.forEach((value, key) => {
    try {
      queryObject[key] = JSON.parse(value);
    } catch (_e) {
      queryObject[key] = value;
    }
  });
  const query = productTagListQuery(
    queryObject
  );
  return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
};
var PAGE_SIZE = 20;
var ProductTagListTable = () => {
  const { t } = useTranslation();
  const { searchParams, raw } = useProductTagTableQuery({
    pageSize: PAGE_SIZE
  });
  const initialData = useLoaderData();
  const { product_tags, count, isPending, isError, error } = useProductTags(
    searchParams,
    {
      initialData,
      placeholderData: keepPreviousData
    }
  );
  const columns = useColumns();
  const filters = useProductTagTableFilters();
  const { table } = useDataTable({
    data: product_tags,
    count,
    columns,
    getRowId: (row) => row.id,
    pageSize: PAGE_SIZE
  });
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime.jsxs)(Container, { className: "divide-y px-0 py-0", children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime.jsx)(Heading, { children: t("productTags.domain") }),
      (0, import_jsx_runtime.jsx)(Button, { variant: "secondary", size: "small", asChild: true, children: (0, import_jsx_runtime.jsx)(Link, { to: "create", children: t("actions.create") }) })
    ] }),
    (0, import_jsx_runtime.jsx)(
      DataTable,
      {
        table,
        filters,
        queryObject: raw,
        isLoading: isPending,
        columns,
        pageSize: PAGE_SIZE,
        count,
        navigateTo: (row) => row.original.id,
        search: true,
        pagination: true,
        orderBy: ["value", "created_at", "updated_at"]
      }
    )
  ] });
};
var ProductTagRowActions = ({
  productTag
}) => {
  const { t } = useTranslation();
  const handleDelete = useDeleteProductTagAction({ productTag });
  return (0, import_jsx_runtime.jsx)(
    ActionMenu,
    {
      groups: [
        {
          actions: [
            {
              icon: (0, import_jsx_runtime.jsx)(PencilSquare, {}),
              label: t("actions.edit"),
              to: `${productTag.id}/edit`
            }
          ]
        },
        {
          actions: [
            {
              icon: (0, import_jsx_runtime.jsx)(Trash, {}),
              label: t("actions.delete"),
              onClick: handleDelete
            }
          ]
        }
      ]
    }
  );
};
var columnHelper = createColumnHelper();
var useColumns = () => {
  const base = useProductTagTableColumns();
  return (0, import_react.useMemo)(
    () => [
      ...base,
      columnHelper.display({
        id: "actions",
        cell: ({ row }) => (0, import_jsx_runtime.jsx)(ProductTagRowActions, { productTag: row.original })
      })
    ],
    [base]
  );
};
var ProductTagList = () => {
  return (0, import_jsx_runtime2.jsx)(
    SingleColumnPage,
    {
      showMetadata: false,
      showJSON: false,
      hasOutlet: true,
      widgets: {
        after,
        before
      },
      children: (0, import_jsx_runtime2.jsx)(ProductTagListTable, {})
    }
  );
};
export {
  ProductTagList as Component,
  productTagListLoader as loader
};
//# sourceMappingURL=product-tag-list-4KHU7LFM-MAQHCRKD.js.map
