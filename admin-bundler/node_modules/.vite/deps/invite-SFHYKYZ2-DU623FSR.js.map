{
  "version": 3,
  "sources": ["../../../../dashboard/dist/invite-SFHYKYZ2.mjs", "../../../../../react-jwt/src/helpers/base64.ts", "../../../../../react-jwt/src/jwt/index.ts", "../../../../../react-jwt/src/hooks/index.tsx"],
  "sourcesContent": ["import {\n  AvatarBox\n} from \"./chunk-ZSTDLFYU.mjs\";\nimport \"./chunk-EQTBJSBZ.mjs\";\nimport {\n  isFetchError\n} from \"./chunk-ONB3JEHR.mjs\";\nimport {\n  Form\n} from \"./chunk-C7RYT3S3.mjs\";\nimport {\n  useAcceptInvite\n} from \"./chunk-T5XNVE2Q.mjs\";\nimport \"./chunk-2T3PD3VS.mjs\";\nimport \"./chunk-OEVIH5XG.mjs\";\nimport {\n  useSignUpWithEmailPass\n} from \"./chunk-V5KUQFZL.mjs\";\nimport \"./chunk-GPBQTNZI.mjs\";\nimport \"./chunk-PWWSB76U.mjs\";\nimport \"./chunk-GH77ZQI2.mjs\";\n\n// src/routes/invite/invite.tsx\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Alert, Button, Heading, Hint, Input, Text, toast } from \"@medusajs/ui\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport i18n from \"i18next\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { decodeToken } from \"react-jwt\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport * as z from \"zod\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CreateAccountSchema = z.object({\n  email: z.string().email(),\n  first_name: z.string().min(1),\n  last_name: z.string().min(1),\n  password: z.string().min(1),\n  repeat_password: z.string().min(1)\n}).superRefine(({ password, repeat_password }, ctx) => {\n  if (password !== repeat_password) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.custom,\n      message: i18n.t(\"invite.passwordMismatch\"),\n      path: [\"repeat_password\"]\n    });\n  }\n});\nvar Invite = () => {\n  const [searchParams] = useSearchParams();\n  const [success, setSuccess] = useState(false);\n  const token = searchParams.get(\"token\");\n  const invite = token ? decodeToken(token) : null;\n  const isValidInvite = invite && validateDecodedInvite(invite);\n  return /* @__PURE__ */ jsx(\"div\", { className: \"bg-ui-bg-subtle relative flex min-h-dvh w-dvw items-center justify-center p-4\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"flex w-full max-w-[280px] flex-col items-center\", children: [\n    /* @__PURE__ */ jsx(AvatarBox, { checked: success }),\n    /* @__PURE__ */ jsx(\"div\", { className: \"max-h-[557px] w-full will-change-contents\", children: isValidInvite ? /* @__PURE__ */ jsx(AnimatePresence, { children: !success ? /* @__PURE__ */ jsx(\n      motion.div,\n      {\n        initial: false,\n        animate: {\n          height: \"557px\",\n          y: 0\n        },\n        exit: {\n          height: 0,\n          y: 40\n        },\n        transition: {\n          duration: 0.8,\n          delay: 0.6,\n          ease: [0, 0.71, 0.2, 1.01]\n        },\n        className: \"w-full will-change-transform\",\n        children: /* @__PURE__ */ jsx(\n          motion.div,\n          {\n            initial: false,\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            exit: {\n              opacity: 0,\n              scale: 0.7\n            },\n            transition: {\n              duration: 0.6,\n              delay: 0,\n              ease: [0, 0.71, 0.2, 1.01]\n            },\n            children: /* @__PURE__ */ jsx(\n              CreateView,\n              {\n                onSuccess: () => setSuccess(true),\n                token,\n                invite\n              }\n            )\n          },\n          \"inner-create-account\"\n        )\n      },\n      \"create-account\"\n    ) : /* @__PURE__ */ jsx(\n      motion.div,\n      {\n        initial: {\n          opacity: 0,\n          scale: 0.4\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        transition: {\n          duration: 1,\n          delay: 0.6,\n          ease: [0, 0.71, 0.2, 1.01]\n        },\n        className: \"w-full\",\n        children: /* @__PURE__ */ jsx(SuccessView, {})\n      },\n      \"success-view\"\n    ) }) : /* @__PURE__ */ jsx(InvalidView, {}) })\n  ] }) });\n};\nvar LoginLink = () => {\n  const { t } = useTranslation();\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"flex w-full flex-col items-center\", children: [\n    /* @__PURE__ */ jsx(\"div\", { className: \"my-6 h-px w-full border-b border-dotted\" }),\n    /* @__PURE__ */ jsx(\n      Link,\n      {\n        to: \"/login\",\n        className: \"text-ui-fg-interactive txt-small !text-ui-fg-base font-medium transition-fg hover:text-ui-fg-interactive-hover focus-visible:text-ui-fg-interactive-hover outline-none\",\n        children: t(\"invite.backToLogin\")\n      },\n      \"login-link\"\n    )\n  ] });\n};\nvar InvalidView = () => {\n  const { t } = useTranslation();\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"flex flex-col items-center\", children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: \"flex flex-col items-center gap-y-1\", children: [\n      /* @__PURE__ */ jsx(Heading, { children: t(\"invite.invalidTokenTitle\") }),\n      /* @__PURE__ */ jsx(Text, { size: \"small\", className: \"text-ui-fg-subtle text-center\", children: t(\"invite.invalidTokenHint\") })\n    ] }),\n    /* @__PURE__ */ jsx(LoginLink, {})\n  ] });\n};\nvar CreateView = ({\n  onSuccess,\n  token,\n  invite\n}) => {\n  const { t } = useTranslation();\n  const [invalid, setInvalid] = useState(false);\n  const [params] = useSearchParams();\n  const isFirstRun = params.get(\"first_run\") === \"true\";\n  const form = useForm({\n    resolver: zodResolver(CreateAccountSchema),\n    defaultValues: {\n      email: isFirstRun ? \"\" : invite.email || \"\",\n      first_name: \"\",\n      last_name: \"\",\n      password: \"\",\n      repeat_password: \"\"\n    }\n  });\n  const { mutateAsync: signUpEmailPass, isPending: isCreatingAuthUser } = useSignUpWithEmailPass();\n  const { mutateAsync: acceptInvite, isPending: isAcceptingInvite } = useAcceptInvite(token);\n  const handleSubmit = form.handleSubmit(async (data) => {\n    try {\n      const authToken = await signUpEmailPass({\n        email: data.email,\n        password: data.password\n      });\n      const invitePayload = {\n        email: data.email,\n        first_name: data.first_name,\n        last_name: data.last_name\n      };\n      await acceptInvite({\n        ...invitePayload,\n        auth_token: authToken\n      });\n      toast.success(t(\"invite.toast.accepted\"));\n      onSuccess();\n    } catch (error) {\n      if (isFetchError(error) && error.status === 400) {\n        form.setError(\"root\", {\n          type: \"manual\",\n          message: t(\"invite.invalidInvite\")\n        });\n        setInvalid(true);\n        return;\n      }\n      form.setError(\"root\", {\n        type: \"manual\",\n        message: t(\"errors.serverError\")\n      });\n    }\n  });\n  const serverError = form.formState.errors.root?.message;\n  const validationError = form.formState.errors.email?.message || form.formState.errors.password?.message || form.formState.errors.repeat_password?.message || form.formState.errors.first_name?.message || form.formState.errors.last_name?.message;\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"flex w-full flex-col items-center\", children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: \"mb-4 flex flex-col items-center\", children: [\n      /* @__PURE__ */ jsx(Heading, { children: t(\"invite.title\") }),\n      /* @__PURE__ */ jsx(Text, { size: \"small\", className: \"text-ui-fg-subtle text-center\", children: t(\"invite.hint\") })\n    ] }),\n    /* @__PURE__ */ jsx(Form, { ...form, children: /* @__PURE__ */ jsxs(\"form\", { onSubmit: handleSubmit, className: \"flex w-full flex-col gap-y-6\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { className: \"flex flex-col gap-y-2\", children: [\n        /* @__PURE__ */ jsx(\n          Form.Field,\n          {\n            control: form.control,\n            name: \"email\",\n            render: ({ field }) => {\n              return /* @__PURE__ */ jsx(Form.Item, { children: /* @__PURE__ */ jsx(Form.Control, { children: /* @__PURE__ */ jsx(\n                Input,\n                {\n                  autoComplete: \"off\",\n                  ...field,\n                  className: \"bg-ui-bg-field-component\",\n                  placeholder: t(\"fields.email\")\n                }\n              ) }) });\n            }\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          Form.Field,\n          {\n            control: form.control,\n            name: \"first_name\",\n            render: ({ field }) => {\n              return /* @__PURE__ */ jsx(Form.Item, { children: /* @__PURE__ */ jsx(Form.Control, { children: /* @__PURE__ */ jsx(\n                Input,\n                {\n                  autoComplete: \"given-name\",\n                  ...field,\n                  className: \"bg-ui-bg-field-component\",\n                  placeholder: t(\"fields.firstName\")\n                }\n              ) }) });\n            }\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          Form.Field,\n          {\n            control: form.control,\n            name: \"last_name\",\n            render: ({ field }) => {\n              return /* @__PURE__ */ jsx(Form.Item, { children: /* @__PURE__ */ jsx(Form.Control, { children: /* @__PURE__ */ jsx(\n                Input,\n                {\n                  autoComplete: \"family-name\",\n                  ...field,\n                  className: \"bg-ui-bg-field-component\",\n                  placeholder: t(\"fields.lastName\")\n                }\n              ) }) });\n            }\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          Form.Field,\n          {\n            control: form.control,\n            name: \"password\",\n            render: ({ field }) => {\n              return /* @__PURE__ */ jsx(Form.Item, { children: /* @__PURE__ */ jsx(Form.Control, { children: /* @__PURE__ */ jsx(\n                Input,\n                {\n                  autoComplete: \"new-password\",\n                  type: \"password\",\n                  ...field,\n                  className: \"bg-ui-bg-field-component\",\n                  placeholder: t(\"fields.password\")\n                }\n              ) }) });\n            }\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          Form.Field,\n          {\n            control: form.control,\n            name: \"repeat_password\",\n            render: ({ field }) => {\n              return /* @__PURE__ */ jsx(Form.Item, { children: /* @__PURE__ */ jsx(Form.Control, { children: /* @__PURE__ */ jsx(\n                Input,\n                {\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  ...field,\n                  className: \"bg-ui-bg-field-component\",\n                  placeholder: t(\"fields.repeatPassword\")\n                }\n              ) }) });\n            }\n          }\n        ),\n        validationError && /* @__PURE__ */ jsx(\"div\", { className: \"text-center mt-6\", children: /* @__PURE__ */ jsx(Hint, { className: \"inline-flex\", variant: \"error\", children: validationError }) }),\n        serverError && /* @__PURE__ */ jsx(\n          Alert,\n          {\n            className: \"p-2 bg-ui-bg-base items-center\",\n            dismissible: true,\n            variant: \"error\",\n            children: serverError\n          }\n        )\n      ] }),\n      /* @__PURE__ */ jsx(\n        Button,\n        {\n          className: \"w-full\",\n          type: \"submit\",\n          isLoading: isCreatingAuthUser || isAcceptingInvite,\n          disabled: invalid,\n          children: t(\"invite.createAccount\")\n        }\n      )\n    ] }) }),\n    /* @__PURE__ */ jsx(LoginLink, {})\n  ] });\n};\nvar SuccessView = () => {\n  const { t } = useTranslation();\n  return /* @__PURE__ */ jsxs(\"div\", { className: \"flex w-full flex-col items-center gap-y-6\", children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: \"flex flex-col items-center gap-y-1\", children: [\n      /* @__PURE__ */ jsx(Heading, { children: t(\"invite.successTitle\") }),\n      /* @__PURE__ */ jsx(Text, { size: \"small\", className: \"text-ui-fg-subtle text-center\", children: t(\"invite.successHint\") })\n    ] }),\n    /* @__PURE__ */ jsx(Button, { variant: \"secondary\", asChild: true, className: \"w-full\", children: /* @__PURE__ */ jsx(Link, { to: \"/login\", replace: true, children: t(\"invite.successAction\") }) }),\n    /* @__PURE__ */ jsx(\n      Link,\n      {\n        to: \"/login\",\n        className: \"text-ui-fg-interactive txt-small !text-ui-fg-base transition-fg hover:text-ui-fg-interactive-hover focus-visible:text-ui-fg-interactive-hover mt-3 font-medium outline-none\",\n        children: t(\"invite.backToLogin\")\n      },\n      \"login-link\"\n    )\n  ] });\n};\nvar InviteSchema = z.object({\n  id: z.string(),\n  jti: z.string(),\n  exp: z.number(),\n  iat: z.number()\n});\nvar validateDecodedInvite = (decoded) => {\n  return InviteSchema.safeParse(decoded).success;\n};\nexport {\n  Invite as Component\n};\n", "const map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst reverseMap = new Map();\n\nfor (let i = 0; i < map.length; i++) {\n  let bits: string = i.toString(2);\n  const padding: number = 6 - bits.length;\n  bits = \"0\".repeat(padding) + bits;\n\n  reverseMap.set(map.charCodeAt(i), bits);\n}\n\n/**\n * Convert base64 string to an array of bytes\n * @param base64Str - Base64 string\n * @returns Array of 1-byte elements\n */\nfunction toByteArray(base64Str: string): string[] {\n  let bits: string = \"\";\n\n  // convert base64 string to bits\n  for (let i = 0; i < base64Str.length; i++) {\n    bits += reverseMap.get(base64Str.charCodeAt(i));\n  }\n\n  // Remove padding (\"=\" characters)\n  bits = bits.slice(0, bits.length - (bits.length % 8));\n\n  const bytesArray = [];\n\n  // Separate string by 8-bit groups\n  for (let i = 0; i < bits.length / 8; i++) {\n    bytesArray.push(bits.slice(i * 8, i * 8 + 8));\n  }\n\n  return bytesArray;\n}\n\n/**\n * Convert a base64 string to an UTF-8 array\n * @param base64Str - Base64 string\n * @returns UTF-8 array\n */\nexport function base64DecToArray(base64Str: string): number[] {\n  // Replace - _ and remove padding\n  base64Str = base64Str.replaceAll(\"=\", \"\");\n  base64Str = base64Str.replaceAll(\"-\", \"+\");\n  base64Str = base64Str.replaceAll(\"_\", \"/\");\n\n  const charCodes: string[] = toByteArray(base64Str);\n\n  return charCodes.map((code) => parseInt(code, 2));\n}\n\n/**\n * Convert a UTF-8 array to string\n * @param bytes\n * @returns Decoded string\n */\nexport function UTF8ArrToStr(bytes: number[]): string {\n  let decoded: string = \"\"; // Decoded string\n  let nPart: number;\n  const arrayLength: number = bytes.length;\n\n  for (let i = 0; i < arrayLength; i++) {\n    nPart = bytes[i];\n    decoded += String.fromCodePoint(\n      nPart > 251 && nPart < 254 && i + 5 < arrayLength /* six bytes */\n        ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So... */\n          (nPart - 252) * 1073741824 +\n            ((bytes[++i] - 128) << 24) +\n            ((bytes[++i] - 128) << 18) +\n            ((bytes[++i] - 128) << 12) +\n            ((bytes[++i] - 128) << 6) +\n            bytes[++i] -\n            128\n        : nPart > 247 && nPart < 252 && i + 4 < arrayLength /* five bytes */\n        ? ((nPart - 248) << 24) +\n          ((bytes[++i] - 128) << 18) +\n          ((bytes[++i] - 128) << 12) +\n          ((bytes[++i] - 128) << 6) +\n          bytes[++i] -\n          128\n        : nPart > 239 && nPart < 248 && i + 3 < arrayLength /* four bytes */\n        ? ((nPart - 240) << 18) +\n          ((bytes[++i] - 128) << 12) +\n          ((bytes[++i] - 128) << 6) +\n          bytes[++i] -\n          128\n        : nPart > 223 && nPart < 240 && i + 2 < arrayLength /* three bytes */\n        ? ((nPart - 224) << 12) + ((bytes[++i] - 128) << 6) + bytes[++i] - 128\n        : nPart > 191 && nPart < 224 && i + 1 < arrayLength /* two bytes */\n        ? ((nPart - 192) << 6) + bytes[++i] - 128 /* nPart < 127 ? */\n        : /* one byte */\n          nPart\n    );\n  }\n\n  return decoded;\n}\n", "import { base64DecToArray, UTF8ArrToStr } from \"../helpers/base64\";\n\n/**\n * Try to decode a JWT. If the token is valid you'll get an object otherwise you'll get null\n * @param token - The JWT that you want to decode\n * @returns Decoded token\n */\nexport function decodeToken<T>(token: string): T | null;\nexport function decodeToken(token: string): Object | null;\nexport function decodeToken<T = Object>(token: string): T | null {\n  try {\n    // if the token has more or less than 3 parts or is not a string\n    // then is not a valid token\n    if (typeof token !== \"string\" || token.split(\".\").length !== 3) {\n      return null;\n    }\n\n    // payload ( index 1 ) has the data stored and\n    // data about the expiration time\n    const payload: string = token.split(\".\")[1];\n\n    const base64Bytes: number[] = base64DecToArray(payload);\n    // Convert utf-8 array to string\n    const jsonPayload: string = UTF8ArrToStr(base64Bytes);\n    // Parse JSON\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error(\"There was an error decoding token: \", error);\n    // Return null if something goes wrong\n    return null;\n  }\n}\n\n/**\n * Verify if the token is expired or not\n * @param token - Your JWT\n * @returns boolean\n */\nexport function isTokenExpired(token: string): boolean {\n  const decodedToken: any = decodeToken(token);\n  let result: boolean = true;\n\n  if (decodedToken && decodedToken.exp) {\n    const expirationDate: Date = new Date(0);\n    expirationDate.setUTCSeconds(decodedToken.exp); // sets the expiration seconds\n    // compare the expiration time and the current time\n    result = expirationDate.valueOf() < new Date().valueOf();\n  }\n\n  return result;\n}\n", "import { useState, useEffect } from \"react\";\nimport { decodeToken, isTokenExpired } from \"../jwt\";\n\n/**\n * This function will help you to decode a JWT and know if it's expired or not\n * @param userJwt - Your JWT\n * @returns An object containing the properties isExpired, decodedToken and reEvaluateToken\n */\nexport function useJwt<T>(userJwt: string): IUseJwt<T>;\nexport function useJwt(userJwt: string): IUseJwt;\nexport function useJwt<T>(userJwt: string): IUseJwt<T> {\n  const [isExpired, setIsExpired] = useState<boolean>(false);\n  const [decodedToken, setDecodedToken] = useState<T | null>(null);\n\n  useEffect(() => {\n    evaluateToken(userJwt);\n  }, [userJwt]);\n\n  const evaluateToken = (token: string) => {\n    setDecodedToken(decodeToken<T>(token));\n    setIsExpired(isTokenExpired(token));\n  };\n\n  return { isExpired, decodedToken, reEvaluateToken: evaluateToken };\n}\n\ninterface IUseJwt<T = Object> {\n  isExpired: boolean;\n  decodedToken: T | null;\n  reEvaluateToken: (token: string) => void;\n}\n"],
  "mappings": "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",
  "names": ["import_react", "t", "i", "map", "length", "toString", "bits", "repeat", "reverseMap", "set", "charCodeAt", "token", "e", "split", "r", "bytes", "arrayLength", "nPart", "decoded", "String", "fromCodePoint", "base64Str", "get", "slice", "bytesArray", "push", "replaceAll", "code", "parse", "jsonPayload", "error", "console", "t"]
}
