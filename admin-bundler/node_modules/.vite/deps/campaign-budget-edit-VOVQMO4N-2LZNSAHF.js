import {
  getCurrencySymbol
} from "./chunk-55MYIBGD.js";
import {
  RouteDrawer,
  useRouteModal
} from "./chunk-3P6F4Q7W.js";
import {
  useCampaign,
  useUpdateCampaign
} from "./chunk-6MTGJSDM.js";
import "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import {
  t
} from "./chunk-NMISSY3S.js";
import {
  numberType,
  objectType
} from "./chunk-D6YTPD33.js";
import {
  Form,
  useForm
} from "./chunk-TKBVWLOU.js";
import "./chunk-QDFILGGU.js";
import "./chunk-ZSXFNTF6.js";
import {
  Button,
  CurrencyInput2 as CurrencyInput,
  Heading,
  Input,
  toast,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  useParams
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/campaign-budget-edit-VOVQMO4N.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var EditCampaignSchema = objectType({
  limit: numberType().min(0).optional().nullable()
});
var EditCampaignBudgetForm = ({
  campaign
}) => {
  var _a;
  const { t: t2 } = useTranslation();
  const { handleSuccess } = useRouteModal();
  const form = useForm({
    defaultValues: {
      limit: ((_a = campaign == null ? void 0 : campaign.budget) == null ? void 0 : _a.limit) || void 0
    },
    resolver: t(EditCampaignSchema)
  });
  const { mutateAsync, isPending } = useUpdateCampaign(campaign.id);
  const handleSubmit = form.handleSubmit(async (data) => {
    await mutateAsync(
      {
        budget: {
          limit: data.limit ? data.limit : null
        }
      },
      {
        onSuccess: ({ campaign: campaign2 }) => {
          toast.success(
            t2("campaigns.edit.successToast", {
              name: campaign2.name
            })
          );
          handleSuccess();
        },
        onError: (error) => {
          toast.error(error.message);
        }
      }
    );
  });
  return (0, import_jsx_runtime.jsx)(RouteDrawer.Form, { form, children: (0, import_jsx_runtime.jsxs)("form", { onSubmit: handleSubmit, className: "flex flex-1 flex-col", children: [
    (0, import_jsx_runtime.jsx)(RouteDrawer.Body, { children: (0, import_jsx_runtime.jsx)("div", { className: "flex flex-col gap-y-4", children: (0, import_jsx_runtime.jsx)(
      Form.Field,
      {
        control: form.control,
        name: "limit",
        render: ({ field: { onChange, value, ...field } }) => {
          var _a2, _b, _c, _d;
          return (0, import_jsx_runtime.jsxs)(Form.Item, { className: "basis-1/2", children: [
            (0, import_jsx_runtime.jsx)(Form.Label, { children: t2("campaigns.budget.fields.limit") }),
            (0, import_jsx_runtime.jsx)(Form.Control, { children: ((_a2 = campaign.budget) == null ? void 0 : _a2.type) === "spend" ? (0, import_jsx_runtime.jsx)(
              CurrencyInput,
              {
                min: 0,
                onValueChange: (value2) => onChange(value2 ? parseInt(value2) : null),
                code: (_b = campaign.budget) == null ? void 0 : _b.currency_code,
                symbol: ((_c = campaign.budget) == null ? void 0 : _c.currency_code) ? getCurrencySymbol(
                  (_d = campaign.budget) == null ? void 0 : _d.currency_code
                ) : "",
                ...field,
                value: value || void 0
              }
            ) : (0, import_jsx_runtime.jsx)(
              Input,
              {
                min: 0,
                ...field,
                value,
                onChange: (e) => {
                  onChange(
                    e.target.value === "" ? null : parseInt(e.target.value)
                  );
                }
              },
              "usage"
            ) }),
            (0, import_jsx_runtime.jsx)(Form.ErrorMessage, {})
          ] });
        }
      }
    ) }) }),
    (0, import_jsx_runtime.jsx)(RouteDrawer.Footer, { children: (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center justify-end gap-x-2", children: [
      (0, import_jsx_runtime.jsx)(RouteDrawer.Close, { asChild: true, children: (0, import_jsx_runtime.jsx)(Button, { variant: "secondary", size: "small", children: t2("actions.cancel") }) }),
      (0, import_jsx_runtime.jsx)(
        Button,
        {
          isLoading: isPending,
          type: "submit",
          variant: "primary",
          size: "small",
          children: t2("actions.save")
        }
      )
    ] }) })
  ] }) });
};
var CampaignBudgetEdit = () => {
  const { t: t2 } = useTranslation();
  const { id } = useParams();
  const { campaign, isLoading, isError, error } = useCampaign(id);
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime2.jsxs)(RouteDrawer, { children: [
    (0, import_jsx_runtime2.jsx)(RouteDrawer.Header, { children: (0, import_jsx_runtime2.jsx)(Heading, { children: t2("campaigns.budget.edit.header") }) }),
    !isLoading && campaign && (0, import_jsx_runtime2.jsx)(EditCampaignBudgetForm, { campaign })
  ] });
};
export {
  CampaignBudgetEdit as Component
};
//# sourceMappingURL=campaign-budget-edit-VOVQMO4N-2LZNSAHF.js.map
