{
  "version": 3,
  "sources": ["../../../../dashboard/dist/chunk-APCXHN2Y.mjs"],
  "sourcesContent": ["import {\n  queryClient\n} from \"./chunk-2T3PD3VS.mjs\";\nimport {\n  queryKeysFactory\n} from \"./chunk-OEVIH5XG.mjs\";\nimport {\n  sdk\n} from \"./chunk-PWWSB76U.mjs\";\n\n// src/hooks/api/tags.tsx\nimport {\n  useMutation,\n  useQuery\n} from \"@tanstack/react-query\";\nvar TAGS_QUERY_KEY = \"tags\";\nvar productTagsQueryKeys = queryKeysFactory(TAGS_QUERY_KEY);\nvar useProductTag = (id, query, options) => {\n  const { data, ...rest } = useQuery({\n    queryKey: productTagsQueryKeys.detail(id, query),\n    queryFn: async () => sdk.admin.productTag.retrieve(id),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useProductTags = (query, options) => {\n  const { data, ...rest } = useQuery({\n    queryKey: productTagsQueryKeys.list(query),\n    queryFn: async () => sdk.admin.productTag.list(query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useCreateProductTag = (query, options) => {\n  return useMutation({\n    mutationFn: async (data) => sdk.admin.productTag.create(data, query),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: productTagsQueryKeys.lists()\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useUpdateProductTag = (id, query, options) => {\n  return useMutation({\n    mutationFn: async (data) => sdk.admin.productTag.update(id, data, query),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: productTagsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: productTagsQueryKeys.detail(data.product_tag.id, query)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useDeleteProductTag = (id, options) => {\n  return useMutation({\n    mutationFn: async () => sdk.admin.productTag.delete(id),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: productTagsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: productTagsQueryKeys.detail(id)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\n\nexport {\n  productTagsQueryKeys,\n  useProductTag,\n  useProductTags,\n  useCreateProductTag,\n  useUpdateProductTag,\n  useDeleteProductTag\n};\n"],
  "mappings": ";;;;;;;;;;;;;AAeA,IAAI,iBAAiB;AACrB,IAAI,uBAAuB,iBAAiB,cAAc;AAC1D,IAAI,gBAAgB,CAAC,IAAI,OAAO,YAAY;AAC1C,QAAM,EAAE,MAAM,GAAG,KAAK,IAAI,SAAS;AAAA,IACjC,UAAU,qBAAqB,OAAO,IAAI,KAAK;AAAA,IAC/C,SAAS,YAAY,IAAI,MAAM,WAAW,SAAS,EAAE;AAAA,IACrD,GAAG;AAAA,EACL,CAAC;AACD,SAAO,EAAE,GAAG,MAAM,GAAG,KAAK;AAC5B;AACA,IAAI,iBAAiB,CAAC,OAAO,YAAY;AACvC,QAAM,EAAE,MAAM,GAAG,KAAK,IAAI,SAAS;AAAA,IACjC,UAAU,qBAAqB,KAAK,KAAK;AAAA,IACzC,SAAS,YAAY,IAAI,MAAM,WAAW,KAAK,KAAK;AAAA,IACpD,GAAG;AAAA,EACL,CAAC;AACD,SAAO,EAAE,GAAG,MAAM,GAAG,KAAK;AAC5B;AACA,IAAI,sBAAsB,CAAC,OAAO,YAAY;AAC5C,SAAO,YAAY;AAAA,IACjB,YAAY,OAAO,SAAS,IAAI,MAAM,WAAW,OAAO,MAAM,KAAK;AAAA,IACnE,WAAW,CAAC,MAAM,WAAW,YAAY;AApC7C;AAqCM,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,qBAAqB,MAAM;AAAA,MACvC,CAAC;AACD,+CAAS,cAAT,iCAAqB,MAAM,WAAW;AAAA,IACxC;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH;AACA,IAAI,sBAAsB,CAAC,IAAI,OAAO,YAAY;AAChD,SAAO,YAAY;AAAA,IACjB,YAAY,OAAO,SAAS,IAAI,MAAM,WAAW,OAAO,IAAI,MAAM,KAAK;AAAA,IACvE,WAAW,CAAC,MAAM,WAAW,YAAY;AAhD7C;AAiDM,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,qBAAqB,MAAM;AAAA,MACvC,CAAC;AACD,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,qBAAqB,OAAO,KAAK,YAAY,IAAI,KAAK;AAAA,MAClE,CAAC;AACD,+CAAS,cAAT,iCAAqB,MAAM,WAAW;AAAA,IACxC;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH;AACA,IAAI,sBAAsB,CAAC,IAAI,YAAY;AACzC,SAAO,YAAY;AAAA,IACjB,YAAY,YAAY,IAAI,MAAM,WAAW,OAAO,EAAE;AAAA,IACtD,WAAW,CAAC,MAAM,WAAW,YAAY;AA/D7C;AAgEM,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,qBAAqB,MAAM;AAAA,MACvC,CAAC;AACD,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,qBAAqB,OAAO,EAAE;AAAA,MAC1C,CAAC;AACD,+CAAS,cAAT,iCAAqB,MAAM,WAAW;AAAA,IACxC;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH;",
  "names": []
}
