import {
  useRegionTableColumns
} from "./chunk-AVD447BF.js";
import "./chunk-NCOYYW2M.js";
import "./chunk-6EUK4TFP.js";
import {
  useRegionTableQuery
} from "./chunk-F77UXPVK.js";
import {
  useRegionTableFilters
} from "./chunk-YL5PYK4Z.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-QZUCBNNJ.js";
import {
  DataTable,
  useDataTable
} from "./chunk-JH6E7Y6M.js";
import "./chunk-EIGZCZHJ.js";
import "./chunk-CEIAMOT7.js";
import "./chunk-EYAVSJ2J.js";
import {
  createColumnHelper
} from "./chunk-TI6Y7EUW.js";
import "./chunk-JEFCFQ36.js";
import "./chunk-Z74QHE3B.js";
import "./chunk-6VC5CKXS.js";
import "./chunk-4HJQONUH.js";
import "./chunk-IANM7SMM.js";
import {
  useDeleteRegion,
  useRegions
} from "./chunk-FREJU5EQ.js";
import "./chunk-4UBJQZN6.js";
import "./chunk-PCCLBZD7.js";
import "./chunk-YSLQHU2M.js";
import {
  ActionMenu
} from "./chunk-IE22HJTV.js";
import "./chunk-RLHQ5IGU.js";
import "./chunk-HZGR4LPF.js";
import "./chunk-3FGSU2DA.js";
import "./chunk-YUBPGLTM.js";
import "./chunk-K4BQKT4B.js";
import "./chunk-SWXOOP7W.js";
import "./chunk-ROURSU5C.js";
import "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import "./chunk-QDFILGGU.js";
import {
  keepPreviousData
} from "./chunk-ZSXFNTF6.js";
import {
  Button,
  Container,
  Heading,
  PencilSquare,
  Text,
  Trash,
  toast,
  usePrompt,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  Link,
  Outlet
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM,
  require_react
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/region-list-KFE6BSOP.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
import after from "virtual:medusa/widgets/region/list/after";
import before from "virtual:medusa/widgets/region/list/before";
var PAGE_SIZE = 20;
var RegionListTable = () => {
  const { t } = useTranslation();
  const { searchParams, raw } = useRegionTableQuery({ pageSize: PAGE_SIZE });
  const {
    regions,
    count,
    isPending: isLoading,
    isError,
    error
  } = useRegions(
    {
      ...searchParams,
      fields: "*payment_providers"
    },
    {
      placeholderData: keepPreviousData
    }
  );
  const filters = useRegionTableFilters();
  const columns = useColumns();
  const { table } = useDataTable({
    data: regions ?? [],
    columns,
    count,
    enablePagination: true,
    getRowId: (row) => row.id,
    pageSize: PAGE_SIZE
  });
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)(Heading, { children: t("regions.domain") }),
        (0, import_jsx_runtime.jsx)(Text, { className: "text-ui-fg-subtle", size: "small", children: t("regions.subtitle") })
      ] }),
      (0, import_jsx_runtime.jsx)(Link, { to: "/settings/regions/create", children: (0, import_jsx_runtime.jsx)(Button, { size: "small", variant: "secondary", children: t("actions.create") }) })
    ] }),
    (0, import_jsx_runtime.jsx)(
      DataTable,
      {
        table,
        columns,
        count,
        pageSize: PAGE_SIZE,
        isLoading,
        filters,
        orderBy: ["name", "created_at", "updated_at"],
        navigateTo: (row) => `${row.original.id}`,
        pagination: true,
        search: true,
        queryObject: raw,
        noRecords: {
          message: t("regions.list.noRecordsMessage")
        }
      }
    )
  ] });
};
var RegionActions = ({ region }) => {
  const { t } = useTranslation();
  const prompt = usePrompt();
  const { mutateAsync } = useDeleteRegion(region.id);
  const handleDelete = async () => {
    const res = await prompt({
      title: t("general.areYouSure"),
      description: t("regions.deleteRegionWarning", {
        name: region.name
      }),
      verificationText: region.name,
      verificationInstruction: t("general.typeToConfirm"),
      confirmText: t("actions.delete"),
      cancelText: t("actions.cancel")
    });
    if (!res) {
      return;
    }
    try {
      await mutateAsync(void 0);
      toast.success(t("general.success"), {
        description: t("regions.toast.delete"),
        dismissLabel: t("actions.close")
      });
    } catch (e) {
      toast.error(t("general.error"), {
        description: e.message,
        dismissLabel: t("actions.close")
      });
    }
  };
  return (0, import_jsx_runtime.jsx)(
    ActionMenu,
    {
      groups: [
        {
          actions: [
            {
              label: t("actions.edit"),
              to: `/settings/regions/${region.id}/edit`,
              icon: (0, import_jsx_runtime.jsx)(PencilSquare, {})
            }
          ]
        },
        {
          actions: [
            {
              label: t("actions.delete"),
              onClick: handleDelete,
              icon: (0, import_jsx_runtime.jsx)(Trash, {})
            }
          ]
        }
      ]
    }
  );
};
var columnHelper = createColumnHelper();
var useColumns = () => {
  const base = useRegionTableColumns();
  return (0, import_react.useMemo)(
    () => [
      ...base,
      columnHelper.display({
        id: "actions",
        cell: ({ row }) => {
          return (0, import_jsx_runtime.jsx)(RegionActions, { region: row.original });
        }
      })
    ],
    [base]
  );
};
var RegionList = () => {
  return (0, import_jsx_runtime2.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
    before.widgets.map((w, i) => {
      return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, {}) }, i);
    }),
    (0, import_jsx_runtime2.jsx)(RegionListTable, {}),
    after.widgets.map((w, i) => {
      return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, {}) }, i);
    }),
    (0, import_jsx_runtime2.jsx)(Outlet, {})
  ] });
};
export {
  RegionList as Component
};
//# sourceMappingURL=region-list-KFE6BSOP-BYJLUIFF.js.map
