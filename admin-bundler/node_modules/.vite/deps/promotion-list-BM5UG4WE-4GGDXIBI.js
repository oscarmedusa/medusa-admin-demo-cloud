import {
  usePromotionTableColumns,
  usePromotionTableQuery
} from "./chunk-WSHOLRFZ.js";
import "./chunk-JC2ISTCK.js";
import "./chunk-KTHKGBUF.js";
import "./chunk-4TA2GWZH.js";
import {
  usePromotionTableFilters
} from "./chunk-JAJBH2XW.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-QZUCBNNJ.js";
import {
  DataTable,
  useDataTable
} from "./chunk-JH6E7Y6M.js";
import "./chunk-EIGZCZHJ.js";
import "./chunk-CEIAMOT7.js";
import "./chunk-EYAVSJ2J.js";
import {
  createColumnHelper
} from "./chunk-TI6Y7EUW.js";
import "./chunk-JEFCFQ36.js";
import "./chunk-Z74QHE3B.js";
import "./chunk-6VC5CKXS.js";
import "./chunk-4HJQONUH.js";
import "./chunk-IANM7SMM.js";
import "./chunk-O47TKOMU.js";
import {
  promotionsQueryKeys,
  useDeletePromotion,
  usePromotions
} from "./chunk-6MTGJSDM.js";
import "./chunk-YSLQHU2M.js";
import {
  ActionMenu
} from "./chunk-IE22HJTV.js";
import "./chunk-RLHQ5IGU.js";
import "./chunk-HZGR4LPF.js";
import "./chunk-3FGSU2DA.js";
import "./chunk-YUBPGLTM.js";
import "./chunk-K4BQKT4B.js";
import "./chunk-SWXOOP7W.js";
import "./chunk-ROURSU5C.js";
import {
  queryClient
} from "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import "./chunk-QDFILGGU.js";
import {
  keepPreviousData,
  sdk
} from "./chunk-ZSXFNTF6.js";
import {
  Button,
  Container,
  Heading,
  PencilSquare,
  Trash,
  usePrompt,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  Link,
  Outlet,
  useLoaderData,
  useNavigate
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM,
  require_react
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/promotion-list-BM5UG4WE.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
import after from "virtual:medusa/widgets/promotion/list/after";
import before from "virtual:medusa/widgets/promotion/list/before";
var params = {
  limit: 20,
  offset: 0
};
var promotionsListQuery = () => ({
  queryKey: promotionsQueryKeys.list(params),
  queryFn: async () => sdk.admin.promotion.list(params)
});
var promotionsLoader = (client) => {
  return async () => {
    const query = promotionsListQuery();
    return queryClient.getQueryData(
      query.queryKey
    ) ?? await client.fetchQuery(query);
  };
};
var PAGE_SIZE = 20;
var PromotionListTable = () => {
  const { t } = useTranslation();
  const initialData = useLoaderData();
  const { searchParams, raw } = usePromotionTableQuery({ pageSize: PAGE_SIZE });
  const { promotions, count, isLoading, isError, error } = usePromotions(
    { ...searchParams },
    {
      initialData,
      placeholderData: keepPreviousData
    }
  );
  const filters = usePromotionTableFilters();
  const columns = useColumns();
  const { table } = useDataTable({
    data: promotions ?? [],
    columns,
    count,
    enablePagination: true,
    pageSize: PAGE_SIZE,
    getRowId: (row) => row.id
  });
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime.jsx)(Heading, { level: "h2", children: t("promotions.domain") }),
      (0, import_jsx_runtime.jsx)(Button, { size: "small", variant: "secondary", asChild: true, children: (0, import_jsx_runtime.jsx)(Link, { to: "create", children: t("actions.create") }) })
    ] }),
    (0, import_jsx_runtime.jsx)(
      DataTable,
      {
        table,
        columns,
        count,
        pageSize: PAGE_SIZE,
        filters,
        search: true,
        pagination: true,
        isLoading,
        queryObject: raw,
        navigateTo: (row) => `${row.original.id}`,
        orderBy: ["created_at", "updated_at"]
      }
    ),
    (0, import_jsx_runtime.jsx)(Outlet, {})
  ] });
};
var PromotionActions = ({ promotion }) => {
  const { t } = useTranslation();
  const prompt = usePrompt();
  const navigate = useNavigate();
  const { mutateAsync } = useDeletePromotion(promotion.id);
  const handleDelete = async () => {
    const res = await prompt({
      title: t("general.areYouSure"),
      description: t("promotions.deleteWarning", { code: promotion.code }),
      confirmText: t("actions.delete"),
      cancelText: t("actions.cancel"),
      verificationInstruction: t("general.typeToConfirm"),
      verificationText: promotion.code
    });
    if (!res) {
      return;
    }
    try {
      await mutateAsync(void 0, {
        onSuccess: () => {
          navigate("/promotions", { replace: true });
        }
      });
    } catch {
      throw new Error(
        `Promotion with code ${promotion.code} could not be deleted`
      );
    }
  };
  return (0, import_jsx_runtime.jsx)(
    ActionMenu,
    {
      groups: [
        {
          actions: [
            {
              icon: (0, import_jsx_runtime.jsx)(PencilSquare, {}),
              label: t("actions.edit"),
              to: `/promotions/${promotion.id}/edit`
            },
            {
              icon: (0, import_jsx_runtime.jsx)(Trash, {}),
              label: t("actions.delete"),
              onClick: handleDelete
            }
          ]
        }
      ]
    }
  );
};
var columnHelper = createColumnHelper();
var useColumns = () => {
  const base = usePromotionTableColumns();
  return (0, import_react.useMemo)(
    () => [
      ...base,
      columnHelper.display({
        id: "actions",
        cell: ({ row }) => {
          return (0, import_jsx_runtime.jsx)(PromotionActions, { promotion: row.original });
        }
      })
    ],
    [base]
  );
};
var PromotionsList = () => {
  return (0, import_jsx_runtime2.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
    before.widgets.map((w, i) => {
      return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, {}) }, i);
    }),
    (0, import_jsx_runtime2.jsx)(PromotionListTable, {}),
    after.widgets.map((w, i) => {
      return (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, {}) }, i);
    })
  ] });
};
export {
  PromotionsList as Component,
  promotionsLoader
};
//# sourceMappingURL=promotion-list-BM5UG4WE-4GGDXIBI.js.map
