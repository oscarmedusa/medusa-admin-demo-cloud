{
  "version": 3,
  "sources": ["../../../../dashboard/dist/customer-group-create-CHEPINUZ.mjs"],
  "sourcesContent": ["import {\n  RouteFocusModal,\n  useRouteModal\n} from \"./chunk-RLLZZQKN.mjs\";\nimport {\n  Form\n} from \"./chunk-C7RYT3S3.mjs\";\nimport {\n  useCreateCustomerGroup\n} from \"./chunk-ZDMW42ZH.mjs\";\nimport \"./chunk-PBIY5KWT.mjs\";\nimport \"./chunk-2T3PD3VS.mjs\";\nimport \"./chunk-OEVIH5XG.mjs\";\nimport \"./chunk-GPBQTNZI.mjs\";\nimport \"./chunk-PWWSB76U.mjs\";\nimport \"./chunk-GH77ZQI2.mjs\";\n\n// src/routes/customer-groups/customer-group-create/components/create-customer-group-form/create-customer-group-form.tsx\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button, Heading, Input, Text, toast } from \"@medusajs/ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport * as zod from \"zod\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CreateCustomerGroupSchema = zod.object({\n  name: zod.string().min(1)\n});\nvar CreateCustomerGroupForm = () => {\n  const { t } = useTranslation();\n  const { handleSuccess } = useRouteModal();\n  const form = useForm({\n    defaultValues: {\n      name: \"\"\n    },\n    resolver: zodResolver(CreateCustomerGroupSchema)\n  });\n  const { mutateAsync, isPending } = useCreateCustomerGroup();\n  const handleSubmit = form.handleSubmit(async (data) => {\n    await mutateAsync(\n      {\n        name: data.name\n      },\n      {\n        onSuccess: ({ customer_group }) => {\n          toast.success(\n            t(\"customerGroups.create.successToast\", {\n              name: customer_group.name\n            })\n          );\n          handleSuccess(`/customer-groups/${customer_group.id}`);\n        },\n        onError: (error) => {\n          toast.error(error.message);\n        }\n      }\n    );\n  });\n  return /* @__PURE__ */ jsx(RouteFocusModal.Form, { form, children: /* @__PURE__ */ jsxs(\"form\", { onSubmit: handleSubmit, children: [\n    /* @__PURE__ */ jsx(RouteFocusModal.Header, { children: /* @__PURE__ */ jsxs(\"div\", { className: \"flex items-center justify-end gap-x-2\", children: [\n      /* @__PURE__ */ jsx(RouteFocusModal.Close, { asChild: true, children: /* @__PURE__ */ jsx(Button, { variant: \"secondary\", size: \"small\", children: t(\"actions.cancel\") }) }),\n      /* @__PURE__ */ jsx(\n        Button,\n        {\n          type: \"submit\",\n          variant: \"primary\",\n          size: \"small\",\n          isLoading: isPending,\n          children: t(\"actions.create\")\n        }\n      )\n    ] }) }),\n    /* @__PURE__ */ jsx(RouteFocusModal.Body, { className: \"flex flex-col items-center pt-[72px]\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"flex w-full max-w-[720px] flex-col gap-y-8\", children: [\n      /* @__PURE__ */ jsxs(\"div\", { children: [\n        /* @__PURE__ */ jsx(Heading, { children: t(\"customerGroups.create.header\") }),\n        /* @__PURE__ */ jsx(Text, { size: \"small\", className: \"text-ui-fg-subtle\", children: t(\"customerGroups.create.hint\") })\n      ] }),\n      /* @__PURE__ */ jsx(\"div\", { className: \"grid grid-cols-2 gap-4\", children: /* @__PURE__ */ jsx(\n        Form.Field,\n        {\n          control: form.control,\n          name: \"name\",\n          render: ({ field }) => {\n            return /* @__PURE__ */ jsxs(Form.Item, { children: [\n              /* @__PURE__ */ jsx(Form.Label, { children: t(\"fields.name\") }),\n              /* @__PURE__ */ jsx(Form.Control, { children: /* @__PURE__ */ jsx(Input, { ...field }) }),\n              /* @__PURE__ */ jsx(Form.ErrorMessage, {})\n            ] });\n          }\n        }\n      ) })\n    ] }) })\n  ] }) });\n};\n\n// src/routes/customer-groups/customer-group-create/customer-group-create.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar CustomerGroupCreate = () => {\n  return /* @__PURE__ */ jsx2(RouteFocusModal, { children: /* @__PURE__ */ jsx2(CreateCustomerGroupForm, {}) });\n};\nexport {\n  CustomerGroupCreate as Component\n};\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "t", "jsx2"]
}
