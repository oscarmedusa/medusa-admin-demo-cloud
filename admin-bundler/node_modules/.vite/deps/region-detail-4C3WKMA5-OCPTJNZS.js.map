{
  "version": 3,
  "sources": ["../../../../dashboard/dist/region-detail-4C3WKMA5.mjs"],
  "sourcesContent": ["import {\n  useCountries,\n  useCountryTableColumns,\n  useCountryTableQuery\n} from \"./chunk-NOAFLTPV.mjs\";\nimport {\n  ListSummary\n} from \"./chunk-I3VB6NM2.mjs\";\nimport {\n  formatProvider\n} from \"./chunk-IR5DHEKS.mjs\";\nimport {\n  SectionRow\n} from \"./chunk-ULQT3HE4.mjs\";\nimport {\n  JsonViewSection\n} from \"./chunk-3IW4HYUP.mjs\";\nimport {\n  currencies\n} from \"./chunk-MWVM4TYO.mjs\";\nimport \"./chunk-LQTHYS2Z.mjs\";\nimport {\n  DataTable,\n  useDataTable\n} from \"./chunk-VASL4POI.mjs\";\nimport \"./chunk-YEDAFXMB.mjs\";\nimport \"./chunk-RKBIB2RM.mjs\";\nimport \"./chunk-WX2SMNCD.mjs\";\nimport \"./chunk-C76H5USB.mjs\";\nimport \"./chunk-IWTE57WW.mjs\";\nimport \"./chunk-M3VFKDXJ.mjs\";\nimport \"./chunk-QAF7PVQE.mjs\";\nimport \"./chunk-ODJSGZRJ.mjs\";\nimport \"./chunk-GQ6DSXIJ.mjs\";\nimport \"./chunk-XDUX5ONP.mjs\";\nimport \"./chunk-ZHSZGFLW.mjs\";\nimport {\n  regionsQueryKeys,\n  useDeleteRegion,\n  useRegion,\n  useUpdateRegion\n} from \"./chunk-CELPQCSR.mjs\";\nimport {\n  usePricePreferences\n} from \"./chunk-7FQQ2EGV.mjs\";\nimport {\n  ActionMenu\n} from \"./chunk-WRXTMI2J.mjs\";\nimport {\n  queryClient\n} from \"./chunk-2T3PD3VS.mjs\";\nimport \"./chunk-OEVIH5XG.mjs\";\nimport \"./chunk-GPBQTNZI.mjs\";\nimport {\n  sdk\n} from \"./chunk-PWWSB76U.mjs\";\nimport \"./chunk-GH77ZQI2.mjs\";\n\n// src/routes/regions/region-detail/loader.ts\nvar regionQuery = (id) => ({\n  queryKey: regionsQueryKeys.detail(id),\n  queryFn: async () => sdk.admin.region.retrieve(id, {\n    fields: \"*payment_providers,*countries,+automatic_taxes\"\n  })\n});\nvar regionLoader = async ({ params }) => {\n  const id = params.id;\n  const query = regionQuery(id);\n  return queryClient.getQueryData(\n    query.queryKey\n  ) ?? await queryClient.fetchQuery(query);\n};\n\n// src/routes/regions/region-detail/region-detail.tsx\nimport { Outlet, useLoaderData, useParams } from \"react-router-dom\";\n\n// src/routes/regions/region-detail/components/region-country-section/region-country-section.tsx\nimport { PlusMini, Trash } from \"@medusajs/icons\";\nimport { Checkbox, Container, Heading, toast, usePrompt } from \"@medusajs/ui\";\nimport {\n  createColumnHelper\n} from \"@tanstack/react-table\";\nimport { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar PREFIX = \"c\";\nvar PAGE_SIZE = 10;\nvar RegionCountrySection = ({ region }) => {\n  const { t } = useTranslation();\n  const prompt = usePrompt();\n  const [rowSelection, setRowSelection] = useState({});\n  const { searchParams, raw } = useCountryTableQuery({\n    pageSize: PAGE_SIZE,\n    prefix: PREFIX\n  });\n  const { countries, count } = useCountries({\n    countries: region.countries || [],\n    ...searchParams\n  });\n  const columns = useColumns();\n  const { table } = useDataTable({\n    data: countries || [],\n    columns,\n    count,\n    enablePagination: true,\n    enableRowSelection: true,\n    getRowId: (row) => row.iso_2,\n    pageSize: PAGE_SIZE,\n    rowSelection: {\n      state: rowSelection,\n      updater: setRowSelection\n    },\n    prefix: PREFIX,\n    meta: {\n      region\n    }\n  });\n  const { mutateAsync } = useUpdateRegion(region.id);\n  const handleRemoveCountries = async () => {\n    const ids = Object.keys(rowSelection).filter((k) => rowSelection[k]);\n    const res = await prompt({\n      title: t(\"general.areYouSure\"),\n      description: t(\"regions.removeCountriesWarning\", {\n        count: ids.length\n      }),\n      verificationText: t(\"actions.remove\"),\n      verificationInstruction: t(\"general.typeToConfirm\"),\n      cancelText: t(\"actions.cancel\"),\n      confirmText: t(\"actions.remove\")\n    });\n    if (!res) {\n      return;\n    }\n    const payload = region.countries?.filter((c) => !ids.includes(c.iso_2)).map((c) => c.iso_2);\n    await mutateAsync(\n      {\n        countries: payload\n      },\n      {\n        onSuccess: () => {\n          toast.success(t(\"regions.toast.countries\"));\n        },\n        onError: (e) => {\n          toast.error(e.message);\n        }\n      }\n    );\n  };\n  return /* @__PURE__ */ jsxs(Container, { className: \"divide-y p-0\", children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: \"flex items-center justify-between px-6 py-4\", children: [\n      /* @__PURE__ */ jsx(Heading, { level: \"h2\", children: t(\"fields.countries\") }),\n      /* @__PURE__ */ jsx(\n        ActionMenu,\n        {\n          groups: [\n            {\n              actions: [\n                {\n                  label: t(\"regions.addCountries\"),\n                  icon: /* @__PURE__ */ jsx(PlusMini, {}),\n                  to: \"countries/add\"\n                }\n              ]\n            }\n          ]\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsx(\n      DataTable,\n      {\n        table,\n        columns,\n        pageSize: PAGE_SIZE,\n        count,\n        orderBy: [\"name\", \"code\"],\n        search: true,\n        pagination: true,\n        queryObject: raw,\n        prefix: PREFIX,\n        commands: [\n          {\n            action: handleRemoveCountries,\n            label: t(\"actions.remove\"),\n            shortcut: \"r\"\n          }\n        ]\n      }\n    )\n  ] });\n};\nvar CountryActions = ({\n  country,\n  region\n}) => {\n  const { t } = useTranslation();\n  const prompt = usePrompt();\n  const { mutateAsync } = useUpdateRegion(region.id);\n  const payload = region.countries?.filter((c) => c.iso_2 !== country.iso_2).map((c) => c.iso_2);\n  const handleRemove = async () => {\n    const res = await prompt({\n      title: t(\"general.areYouSure\"),\n      description: t(\"regions.removeCountryWarning\", {\n        name: country.display_name\n      }),\n      verificationText: country.display_name,\n      verificationInstruction: t(\"general.typeToConfirm\"),\n      cancelText: t(\"actions.cancel\"),\n      confirmText: t(\"actions.remove\")\n    });\n    if (!res) {\n      return;\n    }\n    await mutateAsync(\n      {\n        countries: payload\n      },\n      {\n        onSuccess: () => {\n          toast.success(t(\"regions.toast.countries\"));\n        },\n        onError: (e) => {\n          toast.error(e.message);\n        }\n      }\n    );\n  };\n  return /* @__PURE__ */ jsx(\n    ActionMenu,\n    {\n      groups: [\n        {\n          actions: [\n            {\n              label: t(\"actions.remove\"),\n              onClick: handleRemove,\n              icon: /* @__PURE__ */ jsx(Trash, {})\n            }\n          ]\n        }\n      ]\n    }\n  );\n};\nvar columnHelper = createColumnHelper();\nvar useColumns = () => {\n  const base = useCountryTableColumns();\n  return useMemo(\n    () => [\n      columnHelper.display({\n        id: \"select\",\n        header: ({ table }) => {\n          return /* @__PURE__ */ jsx(\n            Checkbox,\n            {\n              checked: table.getIsSomePageRowsSelected() ? \"indeterminate\" : table.getIsAllPageRowsSelected(),\n              onCheckedChange: (value) => table.toggleAllPageRowsSelected(!!value)\n            }\n          );\n        },\n        cell: ({ row }) => {\n          return /* @__PURE__ */ jsx(\n            Checkbox,\n            {\n              checked: row.getIsSelected(),\n              onCheckedChange: (value) => row.toggleSelected(!!value),\n              onClick: (e) => {\n                e.stopPropagation();\n              }\n            }\n          );\n        }\n      }),\n      ...base,\n      columnHelper.display({\n        id: \"actions\",\n        cell: ({ row, table }) => {\n          const { region } = table.options.meta;\n          return /* @__PURE__ */ jsx(CountryActions, { country: row.original, region });\n        }\n      })\n    ],\n    [base]\n  );\n};\n\n// src/routes/regions/region-detail/components/region-general-section/region-general-section.tsx\nimport { PencilSquare, Trash as Trash2 } from \"@medusajs/icons\";\nimport { Badge, Container as Container2, Heading as Heading2, Text, toast as toast2, usePrompt as usePrompt2 } from \"@medusajs/ui\";\nimport { useTranslation as useTranslation2 } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsx as jsx2, jsxs as jsxs2 } from \"react/jsx-runtime\";\nvar RegionGeneralSection = ({\n  region,\n  pricePreferences\n}) => {\n  const { t } = useTranslation2();\n  const pricePreferenceForRegion = pricePreferences?.find(\n    (preference) => preference.attribute === \"region_id\" && preference.value === region.id\n  );\n  return /* @__PURE__ */ jsxs2(Container2, { className: \"divide-y p-0\", children: [\n    /* @__PURE__ */ jsxs2(\"div\", { className: \"flex items-center justify-between px-6 py-4\", children: [\n      /* @__PURE__ */ jsx2(Heading2, { children: region.name }),\n      /* @__PURE__ */ jsx2(RegionActions, { region })\n    ] }),\n    /* @__PURE__ */ jsx2(\n      SectionRow,\n      {\n        title: t(\"fields.currency\"),\n        value: /* @__PURE__ */ jsxs2(\"div\", { className: \"flex items-center gap-x-2\", children: [\n          /* @__PURE__ */ jsx2(Badge, { size: \"2xsmall\", className: \"uppercase\", children: region.currency_code }),\n          /* @__PURE__ */ jsx2(Text, { size: \"small\", leading: \"compact\", children: currencies[region.currency_code.toUpperCase()].name })\n        ] })\n      }\n    ),\n    /* @__PURE__ */ jsx2(\n      SectionRow,\n      {\n        title: t(\"fields.automaticTaxes\"),\n        value: region.automatic_taxes ? t(\"fields.true\") : t(\"fields.false\")\n      }\n    ),\n    /* @__PURE__ */ jsx2(\n      SectionRow,\n      {\n        title: t(\"fields.taxInclusivePricing\"),\n        value: pricePreferenceForRegion?.is_tax_inclusive ? t(\"fields.true\") : t(\"fields.false\")\n      }\n    ),\n    /* @__PURE__ */ jsx2(\n      SectionRow,\n      {\n        title: t(\"fields.paymentProviders\"),\n        value: /* @__PURE__ */ jsx2(\"div\", { className: \"inline-flex\", children: region.payment_providers?.length ? /* @__PURE__ */ jsx2(\n          ListSummary,\n          {\n            list: region.payment_providers.map((p) => formatProvider(p.id))\n          }\n        ) : \"-\" })\n      }\n    )\n  ] });\n};\nvar RegionActions = ({ region }) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation2();\n  const { mutateAsync } = useDeleteRegion(region.id);\n  const prompt = usePrompt2();\n  const handleDelete = async () => {\n    const res = await prompt({\n      title: t(\"general.areYouSure\"),\n      description: t(\"regions.deleteRegionWarning\", {\n        name: region.name\n      }),\n      verificationText: region.name,\n      verificationInstruction: t(\"general.typeToConfirm\"),\n      confirmText: t(\"actions.delete\"),\n      cancelText: t(\"actions.cancel\")\n    });\n    if (!res) {\n      return;\n    }\n    await mutateAsync(void 0, {\n      onSuccess: () => {\n        toast2.success(t(\"regions.toast.delete\"));\n        navigate(\"/settings/regions\", { replace: true });\n      },\n      onError: (e) => {\n        toast2.error(e.message);\n      }\n    });\n  };\n  return /* @__PURE__ */ jsx2(\n    ActionMenu,\n    {\n      groups: [\n        {\n          actions: [\n            {\n              icon: /* @__PURE__ */ jsx2(PencilSquare, {}),\n              label: t(\"actions.edit\"),\n              to: `/settings/regions/${region.id}/edit`\n            }\n          ]\n        },\n        {\n          actions: [\n            {\n              icon: /* @__PURE__ */ jsx2(Trash2, {}),\n              label: t(\"actions.delete\"),\n              onClick: handleDelete\n            }\n          ]\n        }\n      ]\n    }\n  );\n};\n\n// src/routes/regions/region-detail/region-detail.tsx\nimport after from \"virtual:medusa/widgets/region/details/after\";\nimport before from \"virtual:medusa/widgets/region/details/before\";\nimport { jsx as jsx3, jsxs as jsxs3 } from \"react/jsx-runtime\";\nvar RegionDetail = () => {\n  const initialData = useLoaderData();\n  const { id } = useParams();\n  const {\n    region,\n    isPending: isLoading,\n    isError: isRegionError,\n    error: regionError\n  } = useRegion(\n    id,\n    { fields: \"*payment_providers,*countries,+automatic_taxes\" },\n    {\n      initialData\n    }\n  );\n  const {\n    price_preferences: pricePreferences,\n    isPending: isLoadingPreferences,\n    isError: isPreferencesError,\n    error: preferencesError\n  } = usePricePreferences(\n    {\n      attribute: \"region_id\",\n      value: id\n    },\n    { enabled: !!region }\n  );\n  if (isLoading || isLoadingPreferences || !region) {\n    return /* @__PURE__ */ jsx3(\"div\", { children: \"Loading...\" });\n  }\n  if (isRegionError) {\n    throw regionError;\n  }\n  if (isPreferencesError) {\n    throw preferencesError;\n  }\n  return /* @__PURE__ */ jsxs3(\"div\", { className: \"flex flex-col gap-y-2\", children: [\n    before.widgets.map((w, i) => {\n      return /* @__PURE__ */ jsx3(\"div\", { children: /* @__PURE__ */ jsx3(w.Component, { data: region }) }, i);\n    }),\n    /* @__PURE__ */ jsx3(\n      RegionGeneralSection,\n      {\n        region,\n        pricePreferences: pricePreferences ?? []\n      }\n    ),\n    /* @__PURE__ */ jsx3(RegionCountrySection, { region }),\n    after.widgets.map((w, i) => {\n      return /* @__PURE__ */ jsx3(\"div\", { children: /* @__PURE__ */ jsx3(w.Component, { data: region }) }, i);\n    }),\n    /* @__PURE__ */ jsx3(JsonViewSection, { data: region }),\n    /* @__PURE__ */ jsx3(Outlet, {})\n  ] });\n};\nexport {\n  RegionDetail as Component,\n  regionLoader as loader\n};\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "jsxs2", "jsx2", "jsx3", "jsxs3"]
}
