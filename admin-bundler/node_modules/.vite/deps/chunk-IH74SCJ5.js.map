{
  "version": 3,
  "sources": ["../../../../dashboard/dist/chunk-RZLMJCFD.mjs"],
  "sourcesContent": ["import {\n  queryClient\n} from \"./chunk-2T3PD3VS.mjs\";\nimport {\n  queryKeysFactory\n} from \"./chunk-OEVIH5XG.mjs\";\nimport {\n  sdk\n} from \"./chunk-PWWSB76U.mjs\";\n\n// src/hooks/api/inventory.tsx\nimport {\n  useMutation,\n  useQuery\n} from \"@tanstack/react-query\";\nvar INVENTORY_ITEMS_QUERY_KEY = \"inventory_items\";\nvar inventoryItemsQueryKeys = queryKeysFactory(\n  INVENTORY_ITEMS_QUERY_KEY\n);\nvar INVENTORY_ITEM_LEVELS_QUERY_KEY = \"inventory_item_levels\";\nvar inventoryItemLevelsQueryKeys = queryKeysFactory(\n  INVENTORY_ITEM_LEVELS_QUERY_KEY\n);\nvar useInventoryItems = (query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: () => sdk.admin.inventoryItem.list(query),\n    queryKey: inventoryItemsQueryKeys.list(query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useInventoryItem = (id, query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: () => sdk.admin.inventoryItem.retrieve(id, query),\n    queryKey: inventoryItemsQueryKeys.detail(id),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useCreateInventoryItem = (options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.inventoryItem.create(payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.lists()\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useUpdateInventoryItem = (id, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.inventoryItem.update(id, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.detail(id)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useDeleteInventoryItem = (id, options) => {\n  return useMutation({\n    mutationFn: () => sdk.admin.inventoryItem.delete(id),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.detail(id)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useDeleteInventoryItemLevel = (inventoryItemId, locationId, options) => {\n  return useMutation({\n    mutationFn: () => sdk.admin.inventoryItem.deleteLevel(inventoryItemId, locationId),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.detail(inventoryItemId)\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useInventoryItemLevels = (inventoryItemId, query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: () => sdk.admin.inventoryItem.listLevels(inventoryItemId, query),\n    queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId),\n    ...options\n  });\n  return { ...data, ...rest };\n};\nvar useUpdateInventoryLevel = (inventoryItemId, locationId, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.inventoryItem.updateLevel(inventoryItemId, locationId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.detail(inventoryItemId)\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\nvar useBatchUpdateInventoryLevels = (inventoryItemId, options) => {\n  return useMutation({\n    mutationFn: (payload) => sdk.admin.inventoryItem.batchUpdateLevels(inventoryItemId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.lists()\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemsQueryKeys.detail(inventoryItemId)\n      });\n      queryClient.invalidateQueries({\n        queryKey: inventoryItemLevelsQueryKeys.detail(inventoryItemId)\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\n\nexport {\n  inventoryItemsQueryKeys,\n  inventoryItemLevelsQueryKeys,\n  useInventoryItems,\n  useInventoryItem,\n  useCreateInventoryItem,\n  useUpdateInventoryItem,\n  useDeleteInventoryItem,\n  useDeleteInventoryItemLevel,\n  useInventoryItemLevels,\n  useUpdateInventoryLevel,\n  useBatchUpdateInventoryLevels\n};\n"],
  "mappings": "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",
  "names": []
}
