{
  "version": 3,
  "sources": ["../../../../dashboard/dist/chunk-V5VCT6TO.mjs"],
  "sourcesContent": ["import {\n  ordersQueryKeys\n} from \"./chunk-UXITYQ2U.mjs\";\nimport {\n  queryClient\n} from \"./chunk-2T3PD3VS.mjs\";\nimport {\n  queryKeysFactory\n} from \"./chunk-OEVIH5XG.mjs\";\nimport {\n  sdk\n} from \"./chunk-PWWSB76U.mjs\";\n\n// src/hooks/api/refund-reasons.tsx\nimport { useQuery } from \"@tanstack/react-query\";\nvar REFUND_REASON_QUERY_KEY = \"refund-reason\";\nvar refundReasonQueryKeys = queryKeysFactory(REFUND_REASON_QUERY_KEY);\nvar useRefundReasons = (query, options) => {\n  const { data, ...rest } = useQuery({\n    queryFn: () => sdk.admin.refundReason.list(query),\n    queryKey: [],\n    ...options\n  });\n  return { ...data, ...rest };\n};\n\n// src/hooks/api/fulfillment.tsx\nimport { useMutation } from \"@tanstack/react-query\";\nvar FULFILLMENTS_QUERY_KEY = \"fulfillments\";\nvar fulfillmentsQueryKeys = queryKeysFactory(FULFILLMENTS_QUERY_KEY);\n\n// src/hooks/api/notification.tsx\nimport { useQuery as useQuery2 } from \"@tanstack/react-query\";\nvar NOTIFICATION_QUERY_KEY = \"notification\";\nvar notificationQueryKeys = queryKeysFactory(NOTIFICATION_QUERY_KEY);\nvar useNotifications = (query, options) => {\n  const { data, ...rest } = useQuery2({\n    queryFn: () => sdk.admin.notification.list(query),\n    queryKey: notificationQueryKeys.list(query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\n\n// src/hooks/api/payment-collections.tsx\nimport { useMutation as useMutation2 } from \"@tanstack/react-query\";\nvar PAYMENT_COLLECTION_QUERY_KEY = \"payment-collection\";\nvar paymentCollectionQueryKeys = queryKeysFactory(\n  PAYMENT_COLLECTION_QUERY_KEY\n);\nvar useMarkPaymentCollectionAsPaid = (orderId, paymentCollectionId, options) => {\n  return useMutation2({\n    mutationFn: (payload) => sdk.admin.paymentCollection.markAsPaid(paymentCollectionId, payload),\n    onSuccess: (data, variables, context) => {\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.details()\n      });\n      queryClient.invalidateQueries({\n        queryKey: ordersQueryKeys.preview(orderId)\n      });\n      queryClient.invalidateQueries({\n        queryKey: paymentCollectionQueryKeys.all\n      });\n      options?.onSuccess?.(data, variables, context);\n    },\n    ...options\n  });\n};\n\n// src/hooks/api/product-variants.tsx\nimport { useQuery as useQuery3 } from \"@tanstack/react-query\";\nvar PRODUCT_VARIANT_QUERY_KEY = \"product_variant\";\nvar productVariantQueryKeys = queryKeysFactory(\n  PRODUCT_VARIANT_QUERY_KEY\n);\nvar useVariants = (query, options) => {\n  const { data, ...rest } = useQuery3({\n    queryFn: () => sdk.admin.productVariant.list(query),\n    queryKey: productVariantQueryKeys.list(query),\n    ...options\n  });\n  return { ...data, ...rest };\n};\n\nexport {\n  notificationQueryKeys,\n  useNotifications,\n  useMarkPaymentCollectionAsPaid,\n  useVariants,\n  useRefundReasons\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAeA,IAAI,0BAA0B;AAC9B,IAAI,wBAAwB,iBAAiB,uBAAuB;AACpE,IAAI,mBAAmB,CAAC,OAAO,YAAY;AACzC,QAAM,EAAE,MAAM,GAAG,KAAK,IAAI,SAAS;AAAA,IACjC,SAAS,MAAM,IAAI,MAAM,aAAa,KAAK,KAAK;AAAA,IAChD,UAAU,CAAC;AAAA,IACX,GAAG;AAAA,EACL,CAAC;AACD,SAAO,EAAE,GAAG,MAAM,GAAG,KAAK;AAC5B;AAIA,IAAI,yBAAyB;AAC7B,IAAI,wBAAwB,iBAAiB,sBAAsB;AAInE,IAAI,yBAAyB;AAC7B,IAAI,wBAAwB,iBAAiB,sBAAsB;AACnE,IAAI,mBAAmB,CAAC,OAAO,YAAY;AACzC,QAAM,EAAE,MAAM,GAAG,KAAK,IAAI,SAAU;AAAA,IAClC,SAAS,MAAM,IAAI,MAAM,aAAa,KAAK,KAAK;AAAA,IAChD,UAAU,sBAAsB,KAAK,KAAK;AAAA,IAC1C,GAAG;AAAA,EACL,CAAC;AACD,SAAO,EAAE,GAAG,MAAM,GAAG,KAAK;AAC5B;AAIA,IAAI,+BAA+B;AACnC,IAAI,6BAA6B;AAAA,EAC/B;AACF;AACA,IAAI,iCAAiC,CAAC,SAAS,qBAAqB,YAAY;AAC9E,SAAO,YAAa;AAAA,IAClB,YAAY,CAAC,YAAY,IAAI,MAAM,kBAAkB,WAAW,qBAAqB,OAAO;AAAA,IAC5F,WAAW,CAAC,MAAM,WAAW,YAAY;AArD7C;AAsDM,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,gBAAgB,QAAQ;AAAA,MACpC,CAAC;AACD,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,gBAAgB,QAAQ,OAAO;AAAA,MAC3C,CAAC;AACD,kBAAY,kBAAkB;AAAA,QAC5B,UAAU,2BAA2B;AAAA,MACvC,CAAC;AACD,+CAAS,cAAT,iCAAqB,MAAM,WAAW;AAAA,IACxC;AAAA,IACA,GAAG;AAAA,EACL,CAAC;AACH;AAIA,IAAI,4BAA4B;AAChC,IAAI,0BAA0B;AAAA,EAC5B;AACF;AACA,IAAI,cAAc,CAAC,OAAO,YAAY;AACpC,QAAM,EAAE,MAAM,GAAG,KAAK,IAAI,SAAU;AAAA,IAClC,SAAS,MAAM,IAAI,MAAM,eAAe,KAAK,KAAK;AAAA,IAClD,UAAU,wBAAwB,KAAK,KAAK;AAAA,IAC5C,GAAG;AAAA,EACL,CAAC;AACD,SAAO,EAAE,GAAG,MAAM,GAAG,KAAK;AAC5B;",
  "names": []
}
