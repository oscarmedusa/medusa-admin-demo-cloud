import {
  getPromotionStatus
} from "./chunk-JC2ISTCK.js";
import {
  TextCell,
  TextHeader
} from "./chunk-KTHKGBUF.js";
import {
  StatusCell
} from "./chunk-4TA2GWZH.js";
import {
  createColumnHelper
} from "./chunk-TI6Y7EUW.js";
import {
  useQueryParams
} from "./chunk-JEFCFQ36.js";
import {
  Badge,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM,
  require_react
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/chunk-6UJYXEDY.mjs
var import_react = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var CodeCell = ({ code }) => {
  return (0, import_jsx_runtime.jsx)("div", { className: "flex h-full w-full items-center gap-x-3 overflow-hidden", children: (0, import_jsx_runtime.jsx)(Badge, { size: "2xsmall", className: "truncate", children: code }) });
};
var CodeHeader = ({ text }) => {
  return (0, import_jsx_runtime.jsx)("div", { className: " flex h-full w-full items-center ", children: (0, import_jsx_runtime.jsx)("span", { children: text }) });
};
var StatusCell2 = ({ promotion }) => {
  const { t } = useTranslation();
  const statusMap = {
    [
      "DISABLED"
      /* DISABLED */
    ]: ["grey", t("statuses.disabled")],
    [
      "ACTIVE"
      /* ACTIVE */
    ]: ["green", t("statuses.active")],
    [
      "SCHEDULED"
      /* SCHEDULED */
    ]: ["orange", t("statuses.scheduled")],
    [
      "EXPIRED"
      /* EXPIRED */
    ]: ["red", t("statuses.expired")]
  };
  const [color, text] = statusMap[getPromotionStatus(promotion)];
  return (0, import_jsx_runtime2.jsx)(StatusCell, { color, children: text });
};
var columnHelper = createColumnHelper();
var usePromotionTableColumns = () => {
  const { t } = useTranslation();
  return (0, import_react.useMemo)(
    () => [
      columnHelper.display({
        id: "code",
        header: () => (0, import_jsx_runtime3.jsx)(CodeHeader, { text: t("fields.code") }),
        cell: ({ row }) => (0, import_jsx_runtime3.jsx)(CodeCell, { code: row.original.code })
      }),
      columnHelper.display({
        id: "method",
        header: () => (0, import_jsx_runtime3.jsx)(TextHeader, { text: t("promotions.fields.campaign") }),
        cell: ({ row }) => {
          const text = row.original.is_automatic ? "Automatic" : "Promotion Code";
          return (0, import_jsx_runtime3.jsx)(TextCell, { text });
        }
      }),
      columnHelper.display({
        id: "status",
        header: () => (0, import_jsx_runtime3.jsx)(TextHeader, { text: t("fields.status") }),
        cell: ({ row }) => (0, import_jsx_runtime3.jsx)(StatusCell2, { promotion: row.original })
      })
    ],
    []
  );
};
var usePromotionTableQuery = ({
  prefix,
  pageSize = 20
}) => {
  const queryObject = useQueryParams(
    ["offset", "q", "created_at", "updated_at"],
    prefix
  );
  const { offset, q, created_at, updated_at } = queryObject;
  const searchParams = {
    limit: pageSize,
    created_at: created_at ? JSON.parse(created_at) : void 0,
    updated_at: updated_at ? JSON.parse(updated_at) : void 0,
    offset: offset ? Number(offset) : 0,
    q
  };
  return {
    searchParams,
    raw: queryObject
  };
};

export {
  usePromotionTableColumns,
  usePromotionTableQuery
};
//# sourceMappingURL=chunk-WSHOLRFZ.js.map
