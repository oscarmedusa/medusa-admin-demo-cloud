import {
  JsonViewSection
} from "./chunk-GV2TOR46.js";
import {
  useDeleteUser,
  useUser
} from "./chunk-EFAG6P6Z.js";
import {
  ActionMenu
} from "./chunk-IE22HJTV.js";
import {
  productsQueryKeys
} from "./chunk-3VJMO5NN.js";
import "./chunk-IH74SCJ5.js";
import {
  queryClient
} from "./chunk-4UMAAWOP.js";
import "./chunk-Y5OEN2X7.js";
import {
  sdk
} from "./chunk-ZSXFNTF6.js";
import {
  Container,
  Heading,
  PencilSquare,
  Text,
  Trash,
  usePrompt,
  useTranslation
} from "./chunk-ZUPX4YFG.js";
import {
  Outlet,
  json,
  useLoaderData,
  useNavigate,
  useParams
} from "./chunk-HTGWU6KF.js";
import "./chunk-64MXM5QD.js";
import "./chunk-3VI6QF3M.js";
import {
  require_jsx_runtime
} from "./chunk-P6CFP5BP.js";
import {
  __toESM
} from "./chunk-H5NG3XTT.js";

// node_modules/@medusajs/dashboard/dist/user-detail-TY7LR6K3.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
import after from "virtual:medusa/widgets/user/details/after";
import before from "virtual:medusa/widgets/user/details/before";
var userDetailQuery = (id) => ({
  queryKey: productsQueryKeys.detail(id),
  queryFn: async () => sdk.admin.user.retrieve(id)
});
var userLoader = async ({ params }) => {
  const id = params.id;
  const query = userDetailQuery(id);
  return queryClient.getQueryData(query.queryKey) ?? await queryClient.fetchQuery(query);
};
var UserGeneralSection = ({ user }) => {
  const { t } = useTranslation();
  const navigate = useNavigate();
  const prompt = usePrompt();
  const { mutateAsync } = useDeleteUser(user.id);
  const name = [user.first_name, user.last_name].filter(Boolean).join(" ");
  const handleDeleteUser = async () => {
    const res = await prompt({
      title: t("general.areYouSure"),
      description: t("users.deleteUserWarning", {
        name: name ?? user.email
      }),
      verificationText: name ?? user.email,
      verificationInstruction: t("general.typeToConfirm"),
      confirmText: t("actions.delete"),
      cancelText: t("actions.cancel")
    });
    if (!res) {
      return;
    }
    await mutateAsync(void 0, {
      onSuccess: () => {
        navigate("..");
      }
    });
  };
  return (0, import_jsx_runtime.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center justify-between px-6 py-4", children: [
      (0, import_jsx_runtime.jsx)(Heading, { children: user.email }),
      (0, import_jsx_runtime.jsx)(
        ActionMenu,
        {
          groups: [
            {
              actions: [
                {
                  label: t("actions.edit"),
                  to: "edit",
                  icon: (0, import_jsx_runtime.jsx)(PencilSquare, {})
                }
              ]
            },
            {
              actions: [
                {
                  label: t("actions.delete"),
                  onClick: handleDeleteUser,
                  icon: (0, import_jsx_runtime.jsx)(Trash, {})
                }
              ]
            }
          ]
        }
      )
    ] }),
    (0, import_jsx_runtime.jsxs)("div", { className: "text-ui-fg-subtle grid grid-cols-2 items-center px-6 py-4", children: [
      (0, import_jsx_runtime.jsx)(Text, { size: "small", leading: "compact", weight: "plus", children: t("fields.name") }),
      (0, import_jsx_runtime.jsx)(Text, { size: "small", leading: "compact", children: name ?? "-" })
    ] })
  ] });
};
var UserDetail = () => {
  const initialData = useLoaderData();
  const { id } = useParams();
  const {
    user,
    isPending: isLoading,
    isError,
    error
  } = useUser(id, void 0, {
    initialData
  });
  if (isLoading) {
    return (0, import_jsx_runtime2.jsx)("div", { children: "Loading..." });
  }
  if (isError || !user) {
    if (error) {
      throw error;
    }
    throw json("An unknown error has occured", 500);
  }
  return (0, import_jsx_runtime2.jsxs)("div", { className: "flex flex-col gap-y-2", children: [
    before.widgets.map((w, i) => (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, { data: user }) }, i)),
    (0, import_jsx_runtime2.jsx)(UserGeneralSection, { user }),
    after.widgets.map((w, i) => (0, import_jsx_runtime2.jsx)("div", { children: (0, import_jsx_runtime2.jsx)(w.Component, { data: user }) }, i)),
    (0, import_jsx_runtime2.jsx)(JsonViewSection, { data: user }),
    (0, import_jsx_runtime2.jsx)(Outlet, {})
  ] });
};
export {
  UserDetail as Component,
  userLoader as loader
};
//# sourceMappingURL=user-detail-TY7LR6K3-ZSE3W7VJ.js.map
